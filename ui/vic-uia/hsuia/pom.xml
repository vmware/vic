<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.vmware.vsphere.client.test</groupId>
    <artifactId>automation-projects</artifactId>
    <version>1.0.0.0-SNAPSHOT</version>
  </parent>
  <artifactId>hsuia</artifactId>
  <name>Workflow model</name>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
      <!-- Package the deliverable in the publish output at install, if there is one -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
          <!-- TODO: Why do we do that at all... cannot we just execute based on a p4 workspace? -->
          <executions>
             <execution>
                <phase>install</phase>
                <goals><goal>run</goal></goals>
                <configuration>
                   <!-- Copy the deliverable into the publish, so that it's packaged -->
                   <target>
                      <copy file="${project.build.directory}/${project.artifactId}-${project.version}.jar" todir="${PUBLISH_DIR}/tests/fvt" />
                   </target>
                </configuration>
             </execution>
          </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>

    <!-- LOGGING -->
    <!-- bridge between log4j and slf4j -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <!-- log4j dependencies -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <!-- bridge between common logging and slf4j  -->
    <!-- this is needed to catch spring logging that uses common logging  -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${slf4j.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.reflections</groupId>
      <artifactId>reflections</artifactId>
      <version>0.9.9-RC2</version>
      <exclusions>
        <exclusion>
      	  <artifactId>xml-apis</artifactId>
      	  <groupId>xml-apis</groupId>
      	</exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>ch.ethz.ganymed</groupId>
      <artifactId>ganymed-ssh2</artifactId>
      <version>build210</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <version>4.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.3.2</version>
    </dependency>
  </dependencies>
</project>