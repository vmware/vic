<project name="vic" default="make-war-bundle">
   <description>
       Ant build script for HTML plugin. It outputs a .war file that can be
       copied in the "plugins" folder of the plugin-package.
       -----------------------------------------------------------------------
       NOTE: you don't need to use this script during development with Eclipse
       except to compile resources, see the compile-resources target below.
       -----------------------------------------------------------------------
   </description>

   <!-- Properties specific to this project -->
   <property name="PROJECT_NAME" value="vic"/>
   <property name="BUNDLE_NAME" value="com_vmware_vic"/>

   <!-- SDK home folders should be set in environment variables -->
   <property environment="env"/>
   <property name="FLEX_HOME" value="${env.FLEX_HOME}"/>
   <property name="VSPHERE_SDK_HOME" value="${env.VSPHERE_SDK_HOME}"/>

   <property name="BUILD_DIR" value="${basedir}/target"/>
   <property name="SRC_DIR" value="${basedir}/src/main"/>
   <property name="WEBAPP_DIR" value="${basedir}/src/main/webapp"/>
   <property name="WAR_NAME" value="${PROJECT_NAME}.war"/>
   <property name="REGEXP1" value="^(.*)\${file.separator}(.*).properties$$"/>
   <property name="REGEXP2" value="\2_\1.properties"/>

   <!-- Import the definition of mxmlc-macro -->
   <import file="${VSPHERE_SDK_HOME}/resources/flex-macros.xml"/>

   <!-- Check SDK setup -->
   <target name="check-sdk" description="==> Do not select this internal target.">
      <available file="${FLEX_HOME}/frameworks/libs/player/11.5/playerglobal.swc" property="flex-sdk-ok"/>
      <fail unless="flex-sdk-ok" message="Flex SDK setup incomplete!
${line.separator} Cannot find file ${FLEX_HOME}/frameworks/libs/player/11.5/playerglobal.swc
${line.separator} This file is required to compile for Flash Player 11.5 and must be added to your setup
${line.separator} Download http://fpdownload.macromedia.com/get/flashplayer/installers/archive/playerglobal/playerglobal11_5.swc
${line.separator} Then rename it playerglobal.swc and move it to ${FLEX_HOME}/frameworks/libs/player/11.5/" />
   </target>

   <!-- clean the generated build files -->
   <target name="clean"
          description="==> Do not select this internal target.">
      <delete dir="${WEBAPP_DIR}/locales"/>
      <delete dir="${BUILD_DIR}" />
   </target>

   <!-- Compile separate bundle resource files ${PROJECT_NAME}-{locale}.swf.
        This file name must match the name declared in plugin.xml <resource> tag.
        ECLIPSE NOTE: the Flex project builder does NOT compile resources, so you
        must run this compile-resources target each time your resources change.
   -->
   <target name="compile-resources" depends="check-sdk"
          description="==> Select this target alone to compile resources in Eclipse">
      <property file="${BUILD_DIR}/bundles.properties"/>

      <!-- default US version -->
      <mxmlc-macro>
         <arg line="-locale=en_US" />
         <arg line="-source-path+=${SRC_DIR}/locale/{locale}"/>
         <arg line="-output=${WEBAPP_DIR}/locales/${PROJECT_NAME}-en_US.swf"/>
         <arg line="-include-resource-bundles ${BUNDLE_NAME}" />
      </mxmlc-macro>
      <!-- de/DE -->
      <mxmlc-macro>
         <arg line="-locale=de_DE" />
         <arg line="-source-path+=${SRC_DIR}/locale/{locale}"/>
         <arg line="-output=${WEBAPP_DIR}/locales/${PROJECT_NAME}-de_DE.swf"/>
         <arg line="-include-resource-bundles ${BUNDLE_NAME}" />
      </mxmlc-macro>
      <!-- fr/FR -->
      <mxmlc-macro>
         <arg line="-locale=fr_FR" />
         <arg line="-source-path+=${SRC_DIR}/locale/{locale}"/>
         <arg line="-output=${WEBAPP_DIR}/locales/${PROJECT_NAME}-fr_FR.swf"/>
         <arg line="-include-resource-bundles ${BUNDLE_NAME}" />
      </mxmlc-macro>
      <!-- ja/JP -->
      <mxmlc-macro>
         <arg line="-locale=ja_JP" />
         <arg line="-source-path+=${SRC_DIR}/locale/{locale}"/>
         <arg line="-output=${WEBAPP_DIR}/locales/${PROJECT_NAME}-ja_JP.swf"/>
         <arg line="-include-resource-bundles ${BUNDLE_NAME}" />
      </mxmlc-macro>
      <!-- ko/KR -->
      <mxmlc-macro>
         <arg line="-locale=en_US" />
         <arg line="-source-path+=${SRC_DIR}/locale/{locale}"/>
         <arg line="-output=${WEBAPP_DIR}/locales/${PROJECT_NAME}-ko_KR.swf"/>
         <arg line="-include-resource-bundles ${BUNDLE_NAME}" />
      </mxmlc-macro>
      <!-- zh_CN -->
      <mxmlc-macro>
         <arg line="-locale=zh_CN" />
         <arg line="-source-path+=${SRC_DIR}/locale/{locale}"/>
         <arg line="-output=${WEBAPP_DIR}/locales/${PROJECT_NAME}-zh_CN.swf"/>
         <arg line="-include-resource-bundles ${BUNDLE_NAME}" />
      </mxmlc-macro>
      <!-- zh/TW -->
      <mxmlc-macro>
         <arg line="-locale=zh_TW" />
         <arg line="-source-path+=${SRC_DIR}/locale/{locale}"/>
         <arg line="-output=${WEBAPP_DIR}/locales/${PROJECT_NAME}-zh_TW.swf"/>
         <arg line="-include-resource-bundles ${BUNDLE_NAME}" />
      </mxmlc-macro>

      <!-- Copy + rename all properties file to webapp for future compatibility -->

      <copy todir="${WEBAPP_DIR}/locales" failonerror="false">
         <fileset dir="${SRC_DIR}/locale"/>
         <mapper type="regexp" from="${REGEXP1}" to="${REGEXP2}"/>
      </copy>
   </target>

   <!-- Create the war bundle. -->
   <target name="make-war-bundle" depends="check-sdk, clean, compile-resources"
           description="==> This target is not needed within Eclipse, see the SDK Tutorial.">
       <jar destfile="${BUILD_DIR}/${WAR_NAME}"
            manifest="${WEBAPP_DIR}/META-INF/MANIFEST.MF"
            basedir="${WEBAPP_DIR}"/>

   </target>
</project>

