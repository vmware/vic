eyJhbGciOiJIUzI1NiJ9.IyBBZnRlciBhbnkgY2hhbmdlIHRvIHRoaXMgZmlsZSB5b3UgTVVTVCByZS1zaWduIGFuZCBjaGVja2luIHRoZSAuZHJvbmUueW1sLnNpZwojIFdoZW4geW91IGFyZSByZWFkeSB0byBzdWJtaXQgYSBwdWxsIHJlcXVlc3QsIHlvdSBtdXN0IHJlZ2VuZXJhdGUgLmRyb25lLnltbC5zaWcgZm9yIHRoZSB2bXdhcmUvdmljIHJlcG86CiMgJCBleHBvcnQgRFJPTkVfU0VSVkVSPWh0dHBzOi8vY2kudmNuYS5pbwojICQgZXhwb3J0IERST05FX1RPS0VOPTx0b2tlbj4KIyAkIGRyb25lIHNpZ24gdm13YXJlL3ZpYwojIFRoZSBzZWNyZXRzIGZpbGUgaXMgaW4gb3VyIGxvY2FsIGdpdCByZXBvLiAgQXNrIG1oYWdlbiBmb3IgYWNjZXNzLgoKLS0tCndvcmtzcGFjZToKICBiYXNlOiAvZ28KICBwYXRoOiBzcmMvZ2l0aHViLmNvbS92bXdhcmUvdmljCgpwaXBlbGluZToKICBjbG9uZToKICAgIGltYWdlOiBwbHVnaW5zL2dpdAogICAgdGFnczogdHJ1ZQogICAgIyBkb250IGNsb25lIHN1Ym1vZHVsZXMKICAgIHJlY3Vyc2l2ZTogZmFsc2UKCiAgd2FpdC1mb3ItYnVpbGQ6CiAgICBpbWFnZTogJHtURVNUX0JVSUxEX0lNQUdFPWdjci5pby9lbWluZW50LW5hdGlvbi04NzMxNy92aWMtaW50ZWdyYXRpb24tdGVzdDoxLjMwfQogICAgcHVsbDogdHJ1ZQogICAgZW52aXJvbm1lbnQ6CiAgICAgIEJJTjogYmluCiAgICAgIEdPUEFUSDogL2dvCiAgICAgIFNIRUxMOiAvYmluL2Jhc2gKICAgICAgVEVTVF9VUkxfQVJSQVk6ICR7VEVTVF9VUkxfQVJSQVl9CiAgICAgIERST05FX1NFUlZFUjogJHtEUk9ORV9TRVJWRVJ9CiAgICAgIERST05FX1RPS0VOOiAke0RST05FX1RPS0VOfQogICAgY29tbWFuZHM6CiAgICAgIC0gdGVzdHMvd2FpdF91bnRpbF9wcmV2aW91c19idWlsZHNfY29tcGxldGUuc2gKCiAgdmljLWVuZ2luZToKICAgIGltYWdlOiAke1RFU1RfQlVJTERfSU1BR0U9Z2NyLmlvL2VtaW5lbnQtbmF0aW9uLTg3MzE3L3ZpYy1pbnRlZ3JhdGlvbi10ZXN0OjEuMzB9CiAgICBwdWxsOiB0cnVlCiAgICBlbnZpcm9ubWVudDoKICAgICAgQklOOiBiaW4KICAgICAgR09QQVRIOiAvZ28KICAgICAgU0hFTEw6IC9iaW4vYmFzaAogICAgICBURVNUX1VSTF9BUlJBWTogICR7VEVTVF9VUkxfQVJSQVl9CiAgICAgIFRFU1RfVVNFUk5BTUU6ICAke1RFU1RfVVNFUk5BTUV9CiAgICAgIFRFU1RfUEFTU1dPUkQ6ICAke1RFU1RfUEFTU1dPUkR9CiAgICAgIEJVSUxEX05VTUJFUjogJHtEUk9ORV9CVUlMRF9OVU1CRVJ9CiAgICAgIENPTU1JVDogJHtEUk9ORV9DT01NSVR9CiAgICBjb21tYW5kczoKICAgICAgLSBtYWtlIG1hcmsKICAgICAgLSBtYWtlIC1qMyBhbGwKICAgICAgLSBtYWtlIHNpbmNlbWFyawogICAgICAtIG1ha2UgbWFyawogICAgICAtIGVjaG8gYGxzIHZlbmRvci9naXRodWIuY29tL3Ztd2FyZS9nb3Ztb21pL3ZpbTI1L21ldGhvZHNgCiAgICAgIC0gZWNobyBgbHMgdmVuZG9yL2dpdGh1Yi5jb20vdm13YXJlL2dvdm1vbWkvdmltMjUvdHlwZXNgCiAgICAgIC0gZWNobyBgbHMgdmVuZG9yL2dpdGh1Yi5jb20vZG9ja2VyL2RvY2tlci92ZW5kb3IvZ2l0aHViLmNvbS9vcGVuY29udGFpbmVycy9ydW5jL2xpYmNvbnRhaW5lci9zeXN0ZW1gCiAgICAgIC0gZXhwb3J0IFZJQ19FU1hfVVJMX0FSUkFZPSJgdGVzdHMvZ2V0X3Rlc3RfdXJsLnNoYCIKICAgICAgLSBtYWtlIC1qMyB0ZXN0CiAgICAgIC0gbWFrZSBzaW5jZW1hcmsKICAgIHdoZW46CiAgICAgIHN0YXR1czogIHN1Y2Nlc3MKCiAgdmljLWludGVncmF0aW9uLXRlc3Qtb24tcHI6CiAgICBpbWFnZTogJHtURVNUX0JVSUxEX0lNQUdFPWdjci5pby9lbWluZW50LW5hdGlvbi04NzMxNy92aWMtaW50ZWdyYXRpb24tdGVzdDoxLjMwfQogICAgcHVsbDogdHJ1ZQogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgZW52aXJvbm1lbnQ6CiAgICAgIEJJTjogYmluCiAgICAgIEdPUEFUSDogL2dvCiAgICAgIFNIRUxMOiAvYmluL2Jhc2gKICAgICAgTE9HX1RFTVBfRElSOiBpbnN0YWxsLWxvZ3MKICAgICAgR0lUSFVCX0FVVE9NQVRJT05fQVBJX0tFWTogICR7R0lUSFVCX0FVVE9NQVRJT05fQVBJX0tFWX0KICAgICAgRFJPTkVfU0VSVkVSOiAgJHtEUk9ORV9TRVJWRVJ9CiAgICAgIERST05FX1RPS0VOOiAgJHtEUk9ORV9UT0tFTn0KICAgICAgVEVTVF9VUkxfQVJSQVk6ICAke1RFU1RfVVJMX0FSUkFZfQogICAgICBURVNUX1VTRVJOQU1FOiAgJHtURVNUX1VTRVJOQU1FfQogICAgICBURVNUX1BBU1NXT1JEOiAgJHtURVNUX1BBU1NXT1JEfQogICAgICBURVNUX0RBVEFTVE9SRTogJHtURVNUX0RBVEFTVE9SRX0KICAgICAgVEVTVF9USU1FT1VUOiAke1RFU1RfVElNRU9VVH0KICAgICAgUkVQT1JUSU5HX1NFUlZFUl9VUkw6ICR7UkVQT1JUSU5HX1NFUlZFUl9VUkx9CiAgICAgIEdPVkNfSU5TRUNVUkU6IHRydWUKICAgICAgR09WQ19VU0VSTkFNRTogICR7VEVTVF9VU0VSTkFNRX0KICAgICAgR09WQ19QQVNTV09SRDogICR7VEVTVF9QQVNTV09SRH0KICAgICAgR09WQ19EQVRBU1RPUkU6ICR7VEVTVF9EQVRBU1RPUkV9CiAgICAgIEdTX1BST0pFQ1RfSUQ6ICR7R1NfUFJPSkVDVF9JRH0KICAgICAgR1NfQ0xJRU5UX0VNQUlMOiAke0dTX0NMSUVOVF9FTUFJTH0KICAgICAgR1NfUFJJVkFURV9LRVk6ICR7R1NfUFJJVkFURV9LRVl9CiAgICAgIERPTUFJTjogJHtDSV9ET01BSU59CiAgICAgIFNZU0xPR19TRVJWRVI6ICR7U1lTTE9HX1NFUlZFUn0KICAgICAgU1lTTE9HX1VTRVI6ICR7U1lTTE9HX1VTRVJ9CiAgICAgIFNZU0xPR19QQVNTV0Q6ICR7U1lTTE9HX1BBU1NXRH0KICAgIGNvbW1hbmRzOgogICAgICAtIG1ha2UgbWFyawogICAgICAtIHRlc3RzL2ludGVncmF0aW9uLXRlc3Quc2gKICAgICAgLSBtYWtlIHNpbmNlbWFyawogICAgd2hlbjoKICAgICAgc3RhdHVzOiAgc3VjY2VzcwoKICB2aWMtdWk6CiAgICBpbWFnZTogJHtURVNUX0JVSUxEX0lNQUdFPWdjci5pby9lbWluZW50LW5hdGlvbi04NzMxNy92aWMtaW50ZWdyYXRpb24tdGVzdDoxLjMwfQogICAgcHVsbDogdHJ1ZQogICAgZW52aXJvbm1lbnQ6CiAgICAgIEJJTjogYmluCiAgICBjb21tYW5kczoKICAgICAgLSBtYWtlIG1hcmsKICAgICAgLSBtYWtlIHZpYy11aS1wbHVnaW5zCiAgICAgIC0gbWFrZSBzaW5jZW1hcmsKICAgIHdoZW46CiAgICAgIHN0YXR1czogIHN1Y2Nlc3MKCiAgYnVuZGxlOgogICAgaW1hZ2U6IGdvbGFuZzoxLjgKICAgIHB1bGw6IHRydWUKICAgIGVudmlyb25tZW50OgogICAgICBCSU46IGJpbgogICAgICBCSU5fVEVNUF9ESVI6IGJpbi92aWMKICAgICAgR09QQVRIOiAvZ28KICAgICAgU0hFTEw6IC9iaW4vYmFzaAogICAgICBCVUlMRF9OVU1CRVI6ICR7RFJPTkVfQlVJTERfTlVNQkVSfQogICAgY29tbWFuZHM6CiAgICAgIC0gbWFrZSBtYXJrCiAgICAgIC0gcm0gLXJmICRCSU5fVEVNUF9ESVIKICAgICAgLSBta2RpciAtcCAkQklOX1RFTVBfRElSL3VpCiAgICAgIC0gY3AgLXJmIHVpL2luc3RhbGxlci8qICRCSU5fVEVNUF9ESVIvdWkKICAgICAgLSBjcCBMSUNFTlNFICRCSU5fVEVNUF9ESVIKICAgICAgLSBjcCBkb2MvYnVuZGxlL1JFQURNRSAkQklOX1RFTVBfRElSCiAgICAgIC0gY3AgJEJJTi92aWMtbWFjaGluZSogJEJJTl9URU1QX0RJUgogICAgICAtIGNwICRCSU4vdmljLXVpKiAkQklOX1RFTVBfRElSCiAgICAgIC0gY3AgJEJJTi9hcHBsaWFuY2UuaXNvICRCSU5fVEVNUF9ESVIKICAgICAgLSBjcCAkQklOL2Jvb3RzdHJhcC5pc28gJEJJTl9URU1QX0RJUgogICAgICAtIHRhciBjenZmICRCSU4vdmljXyR7QlVJTERfTlVNQkVSfS50YXIuZ3ogLUMgJEJJTiB2aWMKICAgICAgLSBzaGFzdW0gLWEgMjU2ICRCSU4vdmljXyR7QlVJTERfTlVNQkVSfS50YXIuZ3oKICAgICAgLSBzaGFzdW0gLWEgMSAkQklOL3ZpY18ke0JVSUxEX05VTUJFUn0udGFyLmd6CiAgICAgIC0gbWQ1c3VtICRCSU4vdmljXyR7QlVJTERfTlVNQkVSfS50YXIuZ3oKICAgICAgLSBkdSAta3MgJEJJTi92aWNfJHtCVUlMRF9OVU1CRVJ9LnRhci5neiB8IGF3ayAne3ByaW50ICQxIC8gMTAyNH0nIHwgeyByZWFkIHg7IGVjaG8gJHggTUI7IH0KICAgICAgLSBta2RpciBidW5kbGUKICAgICAgLSBjcCAkQklOL3ZpY18ke0JVSUxEX05VTUJFUn0udGFyLmd6IGJ1bmRsZQogICAgICAtIG1ha2Ugc2luY2VtYXJrCiAgICB3aGVuOgogICAgICByZXBvOiB2bXdhcmUvdmljCiAgICAgIGV2ZW50OiBbIHB1c2gsIHRhZyBdCiAgICAgIGJyYW5jaDogWyBtYXN0ZXIsIHJlbGVhc2VzLyosIHJlZnMvdGFncy8qIF0KICAgICAgc3RhdHVzOiBzdWNjZXNzCgogIG5vdGlmeS1zbGFjazoKICAgIGltYWdlOiBwbHVnaW5zL3NsYWNrCiAgICB3ZWJob29rOiAke1NMQUNLX1VSTH0KICAgIHVzZXJuYW1lOiBkcm9uZQogICAgdGVtcGxhdGU6ID4KICAgICAgYnVpbGQgaHR0cHM6Ly9jaS52Y25hLmlvL3Ztd2FyZS92aWMve3sgYnVpbGQubnVtYmVyIH19IGZpbmlzaGVkIHdpdGggYSB7eyBidWlsZC5zdGF0dXMgfX0gc3RhdHVzLCBmaW5kIHRoZSBsb2dzIGhlcmU6IGh0dHBzOi8vY29uc29sZS5jbG91ZC5nb29nbGUuY29tL20vY2xvdWRzdG9yYWdlL2IvdmljLWNpLWxvZ3Mvby9pbnRlZ3JhdGlvbl9sb2dzX3t7IGJ1aWxkLm51bWJlciB9fV97eyBidWlsZC5jb21taXQgfX0uemlwP2F1dGh1c2VyPTEKICAgIHdoZW46CiAgICAgIHJlcG86IHZtd2FyZS92aWMKICAgICAgYnJhbmNoOiBbIG1hc3RlciwgcmVsZWFzZXMvKiwgcmVmcy90YWdzLyogXQogICAgICBzdGF0dXM6IGZhaWx1cmUKCiAgcHVibGlzaC1nY3MtYnVpbGRzOgogICAgaW1hZ2U6IG1hcGxhaW4vZHJvbmUtZ2NzOmxhdGVzdAogICAgcHVsbDogdHJ1ZQogICAgc291cmNlOiBidW5kbGUKICAgIHRhcmdldDogdmljLWVuZ2luZS1idWlsZHMKICAgIGFjbDoKICAgICAgLSBhbGxVc2VyczpSRUFERVIKICAgIGNhY2hlX2NvbnRyb2w6IHB1YmxpYyxtYXgtYWdlPTM2MDAKICAgIHdoZW46CiAgICAgIHJlcG86IHZtd2FyZS92aWMKICAgICAgZXZlbnQ6IFsgcHVzaCBdCiAgICAgIGJyYW5jaDogWyBtYXN0ZXIsIHJlbGVhc2VzLyogXQogICAgICBzdGF0dXM6IHN1Y2Nlc3MKCiAgcHVibGlzaC1nY3MtcmVsZWFzZXM6CiAgICBpbWFnZTogbWFwbGFpbi9kcm9uZS1nY3M6bGF0ZXN0CiAgICBwdWxsOiB0cnVlCiAgICBzb3VyY2U6IGJ1bmRsZQogICAgdGFyZ2V0OiB2aWMtZW5naW5lLXJlbGVhc2VzCiAgICBhY2w6CiAgICAgIC0gYWxsVXNlcnM6UkVBREVSCiAgICBjYWNoZV9jb250cm9sOiBwdWJsaWMsbWF4LWFnZT0zNjAwCiAgICB3aGVuOgogICAgICByZXBvOiB2bXdhcmUvdmljCiAgICAgIGV2ZW50OiBbIHB1c2gsIHRhZyBdCiAgICAgIGJyYW5jaDogWyByZWZzL3RhZ3MvKiBdCiAgICAgIHN0YXR1czogc3VjY2VzcwoKICByZXBvcnQtY292ZXJhZ2U6CiAgICBpbWFnZTogcGx1Z2lucy9jb3ZlcmFnZQogICAgc2VydmVyOiBodHRwczovL2NvdmVyYWdlLnZtd2FyZS5ydW4KICAgIHBhdHRlcm46IC5jb3Zlci9jb3Zlci5vdXQKICAgIHdoZW46CiAgICAgIGJyYW5jaDogWyBtYXN0ZXIsIHJlbGVhc2VzLyosIHJlZnMvdGFncy8qIF0KICAgICAgcmVwbzogdm13YXJlL3ZpYwogICAgICBzdGF0dXM6IHN1Y2Nlc3MK.6_AQWWhEHAyIoNWXU3JzJp_gwBITsz4VFWJp667uZoY