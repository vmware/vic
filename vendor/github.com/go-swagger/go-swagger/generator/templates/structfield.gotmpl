{{ define "structfield" }}{{ if not $.IsBaseType }}/* {{ template "docstring" . }}{{ template "propertyValidationDocString" .}} */{{ end}}
{{ pascalize .Name}} {{ template "schemaType" . }} `json:"{{ if $.HasBaseType }}-{{ else }}{{ .Name }}{{ if not .Required }},omitempty{{ end }}{{ end }}"{{ if .XMLName }} xml:"{{ .XMLName }}"{{ end }}`
{{ end }}
{{ define "tuplefield" }}
{{ if not $.IsBaseType }}/* {{ template "docstring" . }}{{ template "propertyValidationDocString" .}} */
{{ end }}{{ pascalize .Name}} {{ template "schemaType" . }} `json:"-"` // custom serializer
{{ end }}
{{ define "structfieldIface" }}{{ if not $.IsBaseType }}/* {{ template "docstring" . }}{{ template "propertyValidationDocString" .}} */
{{ end }}{{ pascalize .Name}}() {{ template "schemaType" . }}
Set{{ pascalize .Name}}({{ template "schemaType" . }})
{{ end }}
{{ define "tuplefieldIface" }}{{ if not $.IsBaseType }}
/* {{ template "docstring" . }}{{ template "propertyValidationDocString" .}} */
{{ end }}{{ pascalize .Name}}() {{ template "schemaType" . }}
Set{{ pascalize .Name}}({{ template "schemaType" . }})
{{ end }}
{{ define "privstructfield" }}{{ camelize .Name}}Field {{ template "schemaType" . }}
{{ end }}
{{ define "privtuplefield" }}{{ camelize .Name}}Field {{ template "schemaType" . }}
{{ end }}
