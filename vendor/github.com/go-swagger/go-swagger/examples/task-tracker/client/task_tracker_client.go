package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"
	httptransport "github.com/go-swagger/go-swagger/httpkit/client"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/examples/task-tracker/client/tasks"
)

// Default task tracker HTTP client.
var Default = NewHTTPClient(nil)

// NewHTTPClient creates a new task tracker HTTP client.
func NewHTTPClient(formats strfmt.Registry) *TaskTracker {
	if formats == nil {
		formats = strfmt.Default
	}
	transport := httptransport.New("localhost:8322", "/", []string{"https", "http"})
	return New(transport, formats)
}

// New creates a new task tracker client
func New(transport client.Transport, formats strfmt.Registry) *TaskTracker {
	cli := new(TaskTracker)
	cli.Transport = transport

	cli.Tasks = tasks.New(transport, formats)

	return cli
}

// TaskTracker is a client for task tracker
type TaskTracker struct {
	Tasks *tasks.Client

	Transport client.Transport
}

// SetTransport changes the transport on the client and all its subresources
func (c *TaskTracker) SetTransport(transport client.Transport) {
	c.Transport = transport

	c.Tasks.SetTransport(transport)

}
