package events

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/go-swagger/go-swagger/fixtures/bugs/84/models"
)

/*GetEventsOK Successful response

swagger:response getEventsOK
*/
type GetEventsOK struct {

	// In: body
	Payload []*models.Event `json:"body,omitempty"`
}

// NewGetEventsOK creates GetEventsOK with default headers values
func NewGetEventsOK() *GetEventsOK {
	return &GetEventsOK{}
}

// WithPayload adds the payload to the get events o k response
func (o *GetEventsOK) WithPayload(payload []*models.Event) *GetEventsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get events o k response
func (o *GetEventsOK) SetPayload(payload []*models.Event) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEventsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetEventsDefault Generic Error

swagger:response getEventsDefault
*/
type GetEventsDefault struct {
	_statusCode int
}

// NewGetEventsDefault creates GetEventsDefault with default headers values
func NewGetEventsDefault(code int) *GetEventsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetEventsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get events default response
func (o *GetEventsDefault) WithStatusCode(code int) *GetEventsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get events default response
func (o *GetEventsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WriteResponse to the client
func (o *GetEventsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
}
