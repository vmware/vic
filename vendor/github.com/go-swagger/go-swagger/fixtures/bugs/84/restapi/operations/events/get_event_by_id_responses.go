package events

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/go-swagger/go-swagger/fixtures/bugs/84/models"
)

/*GetEventByIDOK Successful response

swagger:response getEventByIdOK
*/
type GetEventByIDOK struct {

	// In: body
	Payload *models.Event `json:"body,omitempty"`
}

// NewGetEventByIDOK creates GetEventByIDOK with default headers values
func NewGetEventByIDOK() *GetEventByIDOK {
	return &GetEventByIDOK{}
}

// WithPayload adds the payload to the get event by Id o k response
func (o *GetEventByIDOK) WithPayload(payload *models.Event) *GetEventByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get event by Id o k response
func (o *GetEventByIDOK) SetPayload(payload *models.Event) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEventByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetEventByIDDefault Generic Error

swagger:response getEventByIdDefault
*/
type GetEventByIDDefault struct {
	_statusCode int
}

// NewGetEventByIDDefault creates GetEventByIDDefault with default headers values
func NewGetEventByIDDefault(code int) *GetEventByIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetEventByIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get event by Id default response
func (o *GetEventByIDDefault) WithStatusCode(code int) *GetEventByIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get event by Id default response
func (o *GetEventByIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WriteResponse to the client
func (o *GetEventByIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
}
