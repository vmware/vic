# After any change to this file you MUST re-sign and checkin the .drone.yml.sig
# When you are ready to submit a pull request, you must regenerate .drone.yml.sig for the vmware/vic repo:
# $ export DRONE_SERVER=https://ci.vcna.io
# $ export DRONE_TOKEN=<token>
# $ drone sign vmware/vic
# The secrets file is in our local git repo.  Ask mhagen for access.

---
workspace:
  base: /go
  path: src/github.com/vmware/vic

pipeline:
  clone:
    image: plugins/git
    tags: true
    # dont clone submodules
    recursive: false

  wait-for-build:
    image: gcr.io/eminent-nation-87317/vic-integration-test:1.31
    pull: true
    environment:
      BIN: bin
      GOPATH: /go
      SHELL: /bin/bash
      TEST_URL_ARRAY: ${TEST_URL_ARRAY}
      DRONE_SERVER: ${DRONE_SERVER}
      DRONE_TOKEN: ${DRONE_TOKEN}
    commands:
      - tests/wait_until_previous_builds_complete.sh

  vic-engine:
    image: gcr.io/eminent-nation-87317/vic-integration-test:1.31
    pull: true
    environment:
      BIN: bin
      GOPATH: /go
      SHELL: /bin/bash
      TEST_URL_ARRAY:  ${TEST_URL_ARRAY}
      TEST_USERNAME:  ${TEST_USERNAME}
      TEST_PASSWORD:  ${TEST_PASSWORD}
      BUILD_NUMBER: ${DRONE_BUILD_NUMBER}
      COMMIT: ${DRONE_COMMIT}
    commands:
      - make mark
      - make -j3 all
      - make sincemark
      - make mark
      - echo `ls vendor/github.com/vmware/govmomi/vim25/methods`
      - echo `ls vendor/github.com/vmware/govmomi/vim25/types`
      - echo `ls vendor/github.com/docker/docker/vendor/github.com/opencontainers/runc/libcontainer/system`
      - export VIC_ESX_URL_ARRAY="`tests/get_test_url.sh`"
      - make -j3 test
      - make sincemark
    when:
      status:  success

  vic-integration-test-on-pr:
    image: gcr.io/eminent-nation-87317/vic-integration-test:1.31
    pull: true
    privileged: true
    environment:
      BIN: bin
      GOPATH: /go
      SHELL: /bin/bash
      LOG_TEMP_DIR: install-logs
      GITHUB_AUTOMATION_API_KEY:  ${GITHUB_AUTOMATION_API_KEY}
      DRONE_SERVER:  ${DRONE_SERVER}
      DRONE_TOKEN:  ${DRONE_TOKEN}
      TEST_URL_ARRAY:  ${TEST_URL_ARRAY}
      TEST_USERNAME:  ${TEST_USERNAME}
      TEST_PASSWORD:  ${TEST_PASSWORD}
      TEST_DATASTORE: ${TEST_DATASTORE}
      TEST_TIMEOUT: ${TEST_TIMEOUT}
      REPORTING_SERVER_URL: ${REPORTING_SERVER_URL}
      GOVC_INSECURE: true
      GOVC_USERNAME:  ${TEST_USERNAME}
      GOVC_PASSWORD:  ${TEST_PASSWORD}
      GOVC_DATASTORE: ${TEST_DATASTORE}
      GS_PROJECT_ID: ${GS_PROJECT_ID}
      GS_CLIENT_EMAIL: ${GS_CLIENT_EMAIL}
      GS_PRIVATE_KEY: ${GS_PRIVATE_KEY}
      DOMAIN: ${CI_DOMAIN}
      SYSLOG_SERVER: ${SYSLOG_SERVER}
      SYSLOG_USER: ${SYSLOG_USER}
      SYSLOG_PASSWD: ${SYSLOG_PASSWD}
    commands:
      - make mark
      - tests/integration-test.sh
      - make sincemark
    when:
      status:  success

  vic-ui:
    image: gcr.io/eminent-nation-87317/vic-integration-test:1.31
    pull: true
    environment:
      BIN: bin
    commands:
      - make mark
      - make vic-ui-plugins
      - make sincemark
    when:
      status:  success

  bundle:
    image: golang:1.8
    pull: true
    environment:
      BIN: bin
      BIN_TEMP_DIR: bin/vic
      GOPATH: /go
      SHELL: /bin/bash
      BUILD_NUMBER: ${DRONE_BUILD_NUMBER}
    commands:
      - make mark
      - rm -rf $BIN_TEMP_DIR
      - mkdir -p $BIN_TEMP_DIR/ui
      - cp -rf ui/installer/* $BIN_TEMP_DIR/ui
      - cp LICENSE $BIN_TEMP_DIR
      - cp doc/bundle/README $BIN_TEMP_DIR
      - cp $BIN/vic-machine* $BIN_TEMP_DIR
      - cp $BIN/vic-ui* $BIN_TEMP_DIR
      - cp $BIN/appliance.iso $BIN_TEMP_DIR
      - cp $BIN/bootstrap.iso $BIN_TEMP_DIR
      - tar czvf $BIN/vic_${BUILD_NUMBER}.tar.gz -C $BIN vic
      - shasum -a 256 $BIN/vic_${BUILD_NUMBER}.tar.gz
      - shasum -a 1 $BIN/vic_${BUILD_NUMBER}.tar.gz
      - md5sum $BIN/vic_${BUILD_NUMBER}.tar.gz
      - du -ks $BIN/vic_${BUILD_NUMBER}.tar.gz | awk '{print $1 / 1024}' | { read x; echo $x MB; }
      - mkdir bundle
      - cp $BIN/vic_${BUILD_NUMBER}.tar.gz bundle
      - make sincemark
    when:
      repo: vmware/vic
      event: [ push, tag ]
      branch: [ master, releases/*, refs/tags/* ]
      status: success

  notify-slack:
    image: plugins/slack
    webhook: ${SLACK_URL}
    username: drone
    template: >
      build https://ci.vcna.io/vmware/vic/{{ build.number }} finished with a {{ build.status }} status, find the logs here: https://console.cloud.google.com/m/cloudstorage/b/vic-ci-logs/o/integration_logs_{{ build.number }}_{{ build.commit }}.zip?authuser=1
    when:
      repo: vmware/vic
      branch: [ master, releases/*, refs/tags/* ]
      status: failure

  publish-gcs-builds:
    image: maplain/drone-gcs:latest
    pull: true
    source: bundle
    target: vic-engine-builds
    acl:
      - allUsers:READER
    cache_control: public,max-age=3600
    when:
      repo: vmware/vic
      event: [ push ]
      branch: [ master, releases/* ]
      status: success

  publish-gcs-releases:
    image: maplain/drone-gcs:latest
    pull: true
    source: bundle
    target: vic-engine-releases
    acl:
      - allUsers:READER
    cache_control: public,max-age=3600
    when:
      repo: vmware/vic
      event: [ push, tag ]
      branch: [ refs/tags/* ]
      status: success

  report-coverage:
    image: plugins/coverage
    server: https://coverage.vmware.run
    pattern: .cover/cover.out
    when:
      branch: [ master, releases/*, refs/tags/* ]
      repo: vmware/vic
      status: success
