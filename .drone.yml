# After any change to this file you MUST regenerate and checkin
# a .drone.sec even if no secrets were changed. The secrets file is tied
# to a specific .drone.yml so artifacts will not be uploaded to Bintray
# in following builds without an updated .drone.sec
---
clone:
  path: github.com/vmware/vic
  tags: true

build:
  prevent-concurrent-builds:
    image: $${TEST_BUILD_IMAGE=vmware-docker-ci-repo.bintray.io/integration/vic-test:1.18}
    pull: true
    environment:
      BIN: bin
      GOPATH: /drone
      SHELL: /bin/bash
      TEST_URL_ARRAY:  $$TEST_URL_ARRAY
      DRONE_SERVER:  $$DRONE_SERVER
      DRONE_TOKEN:  $$DRONE_TOKEN
    commands:
      - tests/wait_until_previous_builds_complete.sh

  vic:
    image: golang:1.7
    pull: true
    environment:
      BIN: bin
      GOPATH: /drone
      SHELL: /bin/bash
      DOCKER_API_VERSION: "1.21"
      TEST_URL_ARRAY:  $$TEST_URL_ARRAY
      TEST_USERNAME:  $$TEST_USERNAME
      TEST_PASSWORD:  $$TEST_PASSWORD
      BUILD_NUMBER: $$BUILD_NUMBER
      COMMIT: $$COMMIT
    commands:
      - make mark
      - apt-get update
      - apt-get install -yq time
      - make -j3 all
      - make sincemark
      - make mark
      - ls vendor/github.com/vmware/govmomi/vim25/methods
      - ls vendor/github.com/vmware/govmomi/vim25/types
      - export VIC_ESX_URL_ARRAY=`tests/get_test_url.sh`
      - make -j3 test
      - make sincemark

  integration-test-on-pr:
    image: $${TEST_BUILD_IMAGE=vmware-docker-ci-repo.bintray.io/integration/vic-test:1.18}
    pull: true
    environment:
      BIN: bin
      GOPATH: /drone
      SHELL: /bin/bash
      DOCKER_API_VERSION: "1.21"
      LOG_TEMP_DIR: install-logs
      GITHUB_AUTOMATION_API_KEY:  $$GITHUB_AUTOMATION_API_KEY
      DRONE_SERVER:  $$DRONE_SERVER
      DRONE_TOKEN:  $$DRONE_TOKEN
      TEST_URL_ARRAY:  $$TEST_URL_ARRAY
      TEST_USERNAME:  $$TEST_USERNAME
      TEST_PASSWORD:  $$TEST_PASSWORD
      TEST_DATASTORE: $$TEST_DATASTORE
      TEST_TIMEOUT: $$TEST_TIMEOUT
      WINDOWS_URL:  $$WINDOWS_URL
      WINDOWS_USERNAME:  $$WINDOWS_USERNAME
      WINDOWS_PASSWORD:  $$WINDOWS_PASSWORD
      GOVC_INSECURE: true
      GOVC_USERNAME:  $$TEST_USERNAME
      GOVC_PASSWORD:  $$TEST_PASSWORD
      GOVC_RESOURCE_POOL:  $$TEST_RESOURCE
      GOVC_DATASTORE: $$TEST_DATASTORE
      GS_PROJECT_ID: $$GS_PROJECT_ID
      GS_CLIENT_EMAIL: $$GS_CLIENT_EMAIL
      GS_PRIVATE_KEY: $$GS_PRIVATE_KEY
      DOMAIN: $$CI_DOMAIN
    commands:
      - make mark
      - tests/integration-test.sh
      - make sincemark
    when:
      success: true

  vicui:
    image: $${TEST_BUILD_IMAGE=vmware-docker-ci-repo.bintray.io/integration/vic-test:1.18}
    pull: true
    environment:
      BIN: bin
      VICUI_SOURCE_PATH: "ui/vic-ui"
      VICUI_H5_SOURCE_PATH: "ui/vic-ui-h5c/vic"
      BINTRAY_DOWNLOAD_PATH: "https://bintray.com/vmware/vic-repo/download_file?file_path="
      SDK_PACKAGE_ARCHIVE: "vic-ui-sdk.tar.gz"
      UI_INSTALLER_WIN_UTILS_ARCHIVE: "vic_installation_utils_win.tgz"
      UI_INSTALLER_WIN_PATH: "ui/installer/vCenterForWindows"
      ENV_VSPHERE_SDK_HOME: "/tmp/sdk/vc_sdk_min"
      ENV_FLEX_SDK_HOME: "/tmp/sdk/flex_sdk_min"
      ENV_HTML_SDK_HOME: "/tmp/sdk/html-client-sdk"
    commands:
      - make mark
      - version=`$BIN/vic-machine-linux version`
      - version=`echo $version | awk '{print $3}' | awk -F- '{print $1}' | cut -c 2-`
      - sed "s/0.0.1/${version}/" ./$VICUI_SOURCE_PATH/plugin-package.xml > ./$VICUI_SOURCE_PATH/new_plugin-package.xml
      - sed "s/1.0.0/${version}/" ./$VICUI_H5_SOURCE_PATH/plugin-package.xml > ./$VICUI_H5_SOURCE_PATH/new_plugin-package.xml
      - rm ./$VICUI_SOURCE_PATH/plugin-package.xml ./$VICUI_H5_SOURCE_PATH/plugin-package.xml
      - mv ./$VICUI_SOURCE_PATH/new_plugin-package.xml ./$VICUI_SOURCE_PATH/plugin-package.xml
      - mv ./$VICUI_H5_SOURCE_PATH/new_plugin-package.xml ./$VICUI_H5_SOURCE_PATH/plugin-package.xml
      - curl -sL https://deb.nodesource.com/setup_7.x | bash -
      - apt-get install -yq nodejs
      - wget -nv $BINTRAY_DOWNLOAD_PATH$SDK_PACKAGE_ARCHIVE -O /tmp/$SDK_PACKAGE_ARCHIVE
      - wget -nv $BINTRAY_DOWNLOAD_PATH$UI_INSTALLER_WIN_UTILS_ARCHIVE -O /tmp/$UI_INSTALLER_WIN_UTILS_ARCHIVE
      - tar --warning=no-unknown-keyword -xzf /tmp/$SDK_PACKAGE_ARCHIVE -C /tmp/
      - ant -f ui/vic-ui/build-deployable.xml -Denv.VSPHERE_SDK_HOME=$ENV_VSPHERE_SDK_HOME -Denv.FLEX_HOME=$ENV_FLEX_SDK_HOME
      - tar --warning=no-unknown-keyword -xzf /tmp/$UI_INSTALLER_WIN_UTILS_ARCHIVE -C $UI_INSTALLER_WIN_PATH
      - ant -f ui/vic-ui-h5c/build-deployable.xml -Denv.VSPHERE_SDK_HOME=$ENV_VSPHERE_SDK_HOME -Denv.FLEX_HOME=$ENV_FLEX_SDK_HOME -Denv.VSPHERE_H5C_SDK_HOME=$ENV_HTML_SDK_HOME -Denv.BUILD_MODE=prod
      - make sincemark
    when:
      success: true

  bundle:
    image: golang:1.7
    pull: true
    environment:
      BIN: bin
      BIN_TEMP_DIR: bin/vic
      GOPATH: /drone
      SHELL: /bin/bash
    commands:
      - make mark
      - rm -rf $BIN_TEMP_DIR
      - mkdir -p $BIN_TEMP_DIR/ui
      - cp -rf ui/installer/* $BIN_TEMP_DIR/ui
      - cp LICENSE $BIN_TEMP_DIR
      - cp doc/bundle/README $BIN_TEMP_DIR
      - cp $BIN/vic-machine* $BIN_TEMP_DIR
      - cp $BIN/vic-ui* $BIN_TEMP_DIR
      - cp $BIN/appliance.iso $BIN_TEMP_DIR
      - cp $BIN/bootstrap.iso $BIN_TEMP_DIR
      - tar czvf $BIN/vic_$$BUILD_NUMBER.tar.gz -C $BIN vic
      - shasum -a 256 $BIN/vic_$$BUILD_NUMBER.tar.gz
      - shasum -a 1 $BIN/vic_$$BUILD_NUMBER.tar.gz
      - md5sum $BIN/vic_$$BUILD_NUMBER.tar.gz
      - du -ks $BIN/vic_$$BUILD_NUMBER.tar.gz | awk '{print $1 / 1024}' | { read x; echo $x MB; }
      - make sincemark
    when:
      repo: vmware/vic
      branch: master
      success: true

notify:
  slack:
    webhook_url: $$SLACK_URL
    channel: mwilliamson-staff
    username: drone
    template: >
      build https://ci.vmware.run/vmware/vic/{{ build.number }} finished with a {{ build.status }} status, find the logs here: https://console.cloud.google.com/m/cloudstorage/b/vic-ci-logs/o/integration_logs_{{ build.number }}_{{ build.commit }}.zip?authuser=1
    when:
      repo: vmware/vic
      branch: master
      failure: true

publish:
  bintray:
    username: $$BINTRAY_USERNAME
    api_key: $$BINTRAY_API_KEY
    artifacts:
      - file: bin/vic_$$BUILD_NUMBER.tar.gz
        owner: vmware
        type: executable
        repository: vic-repo
        package: build
        version: $$BUILD_NUMBER
        target: vic_$$BUILD_NUMBER.tar.gz
        publish: true
    when:
      repo: vmware/vic
      branch: master
      success: true
  coverage:
    server: https://coverage.vmware.run
    token: $$GITHUB_AUTOMATION_API_KEY
    when:
      repo: vmware/vic
      branch: master
      success: true
