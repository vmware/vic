package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/vic/lib/apiservers/portlayer/client/containers"
	"github.com/vmware/vic/lib/apiservers/portlayer/client/interaction"
	"github.com/vmware/vic/lib/apiservers/portlayer/client/kv"
	"github.com/vmware/vic/lib/apiservers/portlayer/client/logging"
	"github.com/vmware/vic/lib/apiservers/portlayer/client/misc"
	"github.com/vmware/vic/lib/apiservers/portlayer/client/scopes"
	"github.com/vmware/vic/lib/apiservers/portlayer/client/storage"
)

// Default port layer HTTP client.
var Default = NewHTTPClient(nil)

// NewHTTPClient creates a new port layer HTTP client.
func NewHTTPClient(formats strfmt.Registry) *PortLayer {
	if formats == nil {
		formats = strfmt.Default
	}
	transport := httptransport.New("localhost", "/", []string{"http"})
	return New(transport, formats)
}

// New creates a new port layer client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *PortLayer {
	cli := new(PortLayer)
	cli.Transport = transport

	cli.Containers = containers.New(transport, formats)

	cli.Interaction = interaction.New(transport, formats)

	cli.Kv = kv.New(transport, formats)

	cli.Logging = logging.New(transport, formats)

	cli.Misc = misc.New(transport, formats)

	cli.Scopes = scopes.New(transport, formats)

	cli.Storage = storage.New(transport, formats)

	return cli
}

// PortLayer is a client for port layer
type PortLayer struct {
	Containers *containers.Client

	Interaction *interaction.Client

	Kv *kv.Client

	Logging *logging.Client

	Misc *misc.Client

	Scopes *scopes.Client

	Storage *storage.Client

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *PortLayer) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport

	c.Containers.SetTransport(transport)

	c.Interaction.SetTransport(transport)

	c.Kv.SetTransport(transport)

	c.Logging.SetTransport(transport)

	c.Misc.SetTransport(transport)

	c.Scopes.SetTransport(transport)

	c.Storage.SetTransport(transport)

}
