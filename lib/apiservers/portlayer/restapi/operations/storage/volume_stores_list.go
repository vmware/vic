package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// VolumeStoresListHandlerFunc turns a function with the right signature into a volume stores list handler
type VolumeStoresListHandlerFunc func(VolumeStoresListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn VolumeStoresListHandlerFunc) Handle(params VolumeStoresListParams) middleware.Responder {
	return fn(params)
}

// VolumeStoresListHandler interface for that can handle valid volume stores list params
type VolumeStoresListHandler interface {
	Handle(VolumeStoresListParams) middleware.Responder
}

// NewVolumeStoresList creates a new http.Handler for the volume stores list operation
func NewVolumeStoresList(ctx *middleware.Context, handler VolumeStoresListHandler) *VolumeStoresList {
	return &VolumeStoresList{Context: ctx, Handler: handler}
}

/*VolumeStoresList swagger:route GET /storage/volumestores/ storage volumeStoresList

Get a list of available volume store locations

*/
type VolumeStoresList struct {
	Context *middleware.Context
	Handler VolumeStoresListHandler
}

func (o *VolumeStoresList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewVolumeStoresListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
