package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ComVmwareXenonServicesCommonQueryTaskQueryTerm com vmware xenon services common query task query term
// swagger:model com:vmware:xenon:services:common:QueryTask:QueryTerm
type ComVmwareXenonServicesCommonQueryTaskQueryTerm struct {

	// match type
	MatchType string `json:"matchType,omitempty"`

	// match value
	MatchValue string `json:"matchValue,omitempty"`

	// property name
	PropertyName string `json:"propertyName,omitempty"`

	// property type
	PropertyType string `json:"propertyType,omitempty"`

	// range
	Range *ComVmwareXenonServicesCommonQueryTaskNumericRange `json:"range,omitempty"`

	// sort order
	SortOrder string `json:"sortOrder,omitempty"`
}

// Validate validates this com vmware xenon services common query task query term
func (m *ComVmwareXenonServicesCommonQueryTaskQueryTerm) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMatchType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePropertyType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRange(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSortOrder(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var comVmwareXenonServicesCommonQueryTaskQueryTermTypeMatchTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["WILDCARD","TERM","PHRASE","PREFIX"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		comVmwareXenonServicesCommonQueryTaskQueryTermTypeMatchTypePropEnum = append(comVmwareXenonServicesCommonQueryTaskQueryTermTypeMatchTypePropEnum, v)
	}
}

const (
	// ComVmwareXenonServicesCommonQueryTaskQueryTermMatchTypeWILDCARD captures enum value "WILDCARD"
	ComVmwareXenonServicesCommonQueryTaskQueryTermMatchTypeWILDCARD string = "WILDCARD"
	// ComVmwareXenonServicesCommonQueryTaskQueryTermMatchTypeTERM captures enum value "TERM"
	ComVmwareXenonServicesCommonQueryTaskQueryTermMatchTypeTERM string = "TERM"
	// ComVmwareXenonServicesCommonQueryTaskQueryTermMatchTypePHRASE captures enum value "PHRASE"
	ComVmwareXenonServicesCommonQueryTaskQueryTermMatchTypePHRASE string = "PHRASE"
	// ComVmwareXenonServicesCommonQueryTaskQueryTermMatchTypePREFIX captures enum value "PREFIX"
	ComVmwareXenonServicesCommonQueryTaskQueryTermMatchTypePREFIX string = "PREFIX"
)

// prop value enum
func (m *ComVmwareXenonServicesCommonQueryTaskQueryTerm) validateMatchTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, comVmwareXenonServicesCommonQueryTaskQueryTermTypeMatchTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ComVmwareXenonServicesCommonQueryTaskQueryTerm) validateMatchType(formats strfmt.Registry) error {

	if swag.IsZero(m.MatchType) { // not required
		return nil
	}

	// value enum
	if err := m.validateMatchTypeEnum("matchType", "body", m.MatchType); err != nil {
		return err
	}

	return nil
}

var comVmwareXenonServicesCommonQueryTaskQueryTermTypePropertyTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["LONG","STRING","BYTES","PODO","COLLECTION","MAP","BOOLEAN","DOUBLE","InternetAddressV4","InternetAddressV6","DATE","URI","ENUM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		comVmwareXenonServicesCommonQueryTaskQueryTermTypePropertyTypePropEnum = append(comVmwareXenonServicesCommonQueryTaskQueryTermTypePropertyTypePropEnum, v)
	}
}

const (
	// ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeLONG captures enum value "LONG"
	ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeLONG string = "LONG"
	// ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeSTRING captures enum value "STRING"
	ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeSTRING string = "STRING"
	// ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeBYTES captures enum value "BYTES"
	ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeBYTES string = "BYTES"
	// ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypePODO captures enum value "PODO"
	ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypePODO string = "PODO"
	// ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeCOLLECTION captures enum value "COLLECTION"
	ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeCOLLECTION string = "COLLECTION"
	// ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeMAP captures enum value "MAP"
	ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeMAP string = "MAP"
	// ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeBOOLEAN captures enum value "BOOLEAN"
	ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeBOOLEAN string = "BOOLEAN"
	// ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeDOUBLE captures enum value "DOUBLE"
	ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeDOUBLE string = "DOUBLE"
	// ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeInternetAddressV4 captures enum value "InternetAddressV4"
	ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeInternetAddressV4 string = "InternetAddressV4"
	// ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeInternetAddressV6 captures enum value "InternetAddressV6"
	ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeInternetAddressV6 string = "InternetAddressV6"
	// ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeDATE captures enum value "DATE"
	ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeDATE string = "DATE"
	// ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeURI captures enum value "URI"
	ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeURI string = "URI"
	// ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeENUM captures enum value "ENUM"
	ComVmwareXenonServicesCommonQueryTaskQueryTermPropertyTypeENUM string = "ENUM"
)

// prop value enum
func (m *ComVmwareXenonServicesCommonQueryTaskQueryTerm) validatePropertyTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, comVmwareXenonServicesCommonQueryTaskQueryTermTypePropertyTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ComVmwareXenonServicesCommonQueryTaskQueryTerm) validatePropertyType(formats strfmt.Registry) error {

	if swag.IsZero(m.PropertyType) { // not required
		return nil
	}

	// value enum
	if err := m.validatePropertyTypeEnum("propertyType", "body", m.PropertyType); err != nil {
		return err
	}

	return nil
}

func (m *ComVmwareXenonServicesCommonQueryTaskQueryTerm) validateRange(formats strfmt.Registry) error {

	if swag.IsZero(m.Range) { // not required
		return nil
	}

	if m.Range != nil {

		if err := m.Range.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("range")
			}
			return err
		}
	}

	return nil
}

var comVmwareXenonServicesCommonQueryTaskQueryTermTypeSortOrderPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ASC","DESC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		comVmwareXenonServicesCommonQueryTaskQueryTermTypeSortOrderPropEnum = append(comVmwareXenonServicesCommonQueryTaskQueryTermTypeSortOrderPropEnum, v)
	}
}

const (
	// ComVmwareXenonServicesCommonQueryTaskQueryTermSortOrderASC captures enum value "ASC"
	ComVmwareXenonServicesCommonQueryTaskQueryTermSortOrderASC string = "ASC"
	// ComVmwareXenonServicesCommonQueryTaskQueryTermSortOrderDESC captures enum value "DESC"
	ComVmwareXenonServicesCommonQueryTaskQueryTermSortOrderDESC string = "DESC"
)

// prop value enum
func (m *ComVmwareXenonServicesCommonQueryTaskQueryTerm) validateSortOrderEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, comVmwareXenonServicesCommonQueryTaskQueryTermTypeSortOrderPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ComVmwareXenonServicesCommonQueryTaskQueryTerm) validateSortOrder(formats strfmt.Registry) error {

	if swag.IsZero(m.SortOrder) { // not required
		return nil
	}

	// value enum
	if err := m.validateSortOrderEnum("sortOrder", "body", m.SortOrder); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwareXenonServicesCommonQueryTaskQueryTerm) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwareXenonServicesCommonQueryTaskQueryTerm) UnmarshalBinary(b []byte) error {
	var res ComVmwareXenonServicesCommonQueryTaskQueryTerm
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
