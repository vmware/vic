package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ComVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskState com vmware photon controller model tasks monitoring stats collection task service stats collection task state
// swagger:model com:vmware:photon:controller:model:tasks:monitoring:StatsCollectionTaskService:StatsCollectionTaskState
type ComVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskState struct {

	// customization clauses
	CustomizationClauses []*ComVmwareXenonServicesCommonQueryTaskQuery `json:"customizationClauses"`

	// failure message
	FailureMessage string `json:"failureMessage,omitempty"`

	// options
	Options []string `json:"options"`

	// resource pool link
	ResourcePoolLink string `json:"resourcePoolLink,omitempty"`

	// stats adapter reference
	StatsAdapterReference strfmt.URI `json:"statsAdapterReference,omitempty"`

	// task info
	TaskInfo *ComVmwareXenonCommonTaskState `json:"taskInfo,omitempty"`

	// task sub stage
	TaskSubStage string `json:"taskSubStage,omitempty"`
}

// Validate validates this com vmware photon controller model tasks monitoring stats collection task service stats collection task state
func (m *ComVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskState) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCustomizationClauses(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateOptions(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTaskInfo(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTaskSubStage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ComVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskState) validateCustomizationClauses(formats strfmt.Registry) error {

	if swag.IsZero(m.CustomizationClauses) { // not required
		return nil
	}

	for i := 0; i < len(m.CustomizationClauses); i++ {

		if swag.IsZero(m.CustomizationClauses[i]) { // not required
			continue
		}

		if m.CustomizationClauses[i] != nil {

			if err := m.CustomizationClauses[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("customizationClauses" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var comVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskStateOptionsItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DOCUMENT_CHANGES_ONLY","VALIDATE_ONLY","IS_MOCK","PRESERVE_MISSING_RESOUCES","SELF_DELETE_ON_COMPLETION"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		comVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskStateOptionsItemsEnum = append(comVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskStateOptionsItemsEnum, v)
	}
}

func (m *ComVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskState) validateOptionsItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, comVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskStateOptionsItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *ComVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskState) validateOptions(formats strfmt.Registry) error {

	if swag.IsZero(m.Options) { // not required
		return nil
	}

	for i := 0; i < len(m.Options); i++ {

		// value enum
		if err := m.validateOptionsItemsEnum("options"+"."+strconv.Itoa(i), "body", m.Options[i]); err != nil {
			return err
		}

	}

	return nil
}

func (m *ComVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskState) validateTaskInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.TaskInfo) { // not required
		return nil
	}

	if m.TaskInfo != nil {

		if err := m.TaskInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("taskInfo")
			}
			return err
		}
	}

	return nil
}

var comVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskStateTypeTaskSubStagePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["INIT","GET_RESOURCES"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		comVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskStateTypeTaskSubStagePropEnum = append(comVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskStateTypeTaskSubStagePropEnum, v)
	}
}

const (
	// ComVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskStateTaskSubStageINIT captures enum value "INIT"
	ComVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskStateTaskSubStageINIT string = "INIT"
	// ComVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskStateTaskSubStageGETRESOURCES captures enum value "GET_RESOURCES"
	ComVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskStateTaskSubStageGETRESOURCES string = "GET_RESOURCES"
)

// prop value enum
func (m *ComVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskState) validateTaskSubStageEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, comVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskStateTypeTaskSubStagePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ComVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskState) validateTaskSubStage(formats strfmt.Registry) error {

	if swag.IsZero(m.TaskSubStage) { // not required
		return nil
	}

	// value enum
	if err := m.validateTaskSubStageEnum("taskSubStage", "body", m.TaskSubStage); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskState) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskState) UnmarshalBinary(b []byte) error {
	var res ComVmwarePhotonControllerModelTasksMonitoringStatsCollectionTaskServiceStatsCollectionTaskState
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
