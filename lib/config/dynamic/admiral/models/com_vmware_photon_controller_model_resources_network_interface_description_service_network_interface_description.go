package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ComVmwarePhotonControllerModelResourcesNetworkInterfaceDescriptionServiceNetworkInterfaceDescription com vmware photon controller model resources network interface description service network interface description
// swagger:model com:vmware:photon:controller:model:resources:NetworkInterfaceDescriptionService:NetworkInterfaceDescription
type ComVmwarePhotonControllerModelResourcesNetworkInterfaceDescriptionServiceNetworkInterfaceDescription struct {

	// address
	Address string `json:"address,omitempty"`

	// assign public Ip address
	AssignPublicIPAddress bool `json:"assignPublicIpAddress,omitempty"`

	// assignment
	Assignment string `json:"assignment,omitempty"`

	// creation time micros
	CreationTimeMicros int64 `json:"creationTimeMicros,omitempty"`

	// custom properties
	CustomProperties map[string]string `json:"customProperties,omitempty"`

	// desc
	Desc string `json:"desc,omitempty"`

	// device index
	DeviceIndex int64 `json:"deviceIndex,omitempty"`

	// endpoint link
	EndpointLink string `json:"endpointLink,omitempty"`

	// firewall links
	FirewallLinks []string `json:"firewallLinks"`

	// group links
	GroupLinks []string `json:"groupLinks"`

	// id
	ID string `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// network link
	NetworkLink string `json:"networkLink,omitempty"`

	// region Id
	RegionID string `json:"regionId,omitempty"`

	// security group links
	SecurityGroupLinks []string `json:"securityGroupLinks"`

	// subnet link
	SubnetLink string `json:"subnetLink,omitempty"`

	// tag links
	TagLinks []string `json:"tagLinks"`

	// tenant links
	TenantLinks []string `json:"tenantLinks"`
}

// Validate validates this com vmware photon controller model resources network interface description service network interface description
func (m *ComVmwarePhotonControllerModelResourcesNetworkInterfaceDescriptionServiceNetworkInterfaceDescription) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAssignment(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateFirewallLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateGroupLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSecurityGroupLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTagLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTenantLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var comVmwarePhotonControllerModelResourcesNetworkInterfaceDescriptionServiceNetworkInterfaceDescriptionTypeAssignmentPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["STATIC","DYNAMIC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		comVmwarePhotonControllerModelResourcesNetworkInterfaceDescriptionServiceNetworkInterfaceDescriptionTypeAssignmentPropEnum = append(comVmwarePhotonControllerModelResourcesNetworkInterfaceDescriptionServiceNetworkInterfaceDescriptionTypeAssignmentPropEnum, v)
	}
}

const (
	// ComVmwarePhotonControllerModelResourcesNetworkInterfaceDescriptionServiceNetworkInterfaceDescriptionAssignmentSTATIC captures enum value "STATIC"
	ComVmwarePhotonControllerModelResourcesNetworkInterfaceDescriptionServiceNetworkInterfaceDescriptionAssignmentSTATIC string = "STATIC"
	// ComVmwarePhotonControllerModelResourcesNetworkInterfaceDescriptionServiceNetworkInterfaceDescriptionAssignmentDYNAMIC captures enum value "DYNAMIC"
	ComVmwarePhotonControllerModelResourcesNetworkInterfaceDescriptionServiceNetworkInterfaceDescriptionAssignmentDYNAMIC string = "DYNAMIC"
)

// prop value enum
func (m *ComVmwarePhotonControllerModelResourcesNetworkInterfaceDescriptionServiceNetworkInterfaceDescription) validateAssignmentEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, comVmwarePhotonControllerModelResourcesNetworkInterfaceDescriptionServiceNetworkInterfaceDescriptionTypeAssignmentPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ComVmwarePhotonControllerModelResourcesNetworkInterfaceDescriptionServiceNetworkInterfaceDescription) validateAssignment(formats strfmt.Registry) error {

	if swag.IsZero(m.Assignment) { // not required
		return nil
	}

	// value enum
	if err := m.validateAssignmentEnum("assignment", "body", m.Assignment); err != nil {
		return err
	}

	return nil
}

func (m *ComVmwarePhotonControllerModelResourcesNetworkInterfaceDescriptionServiceNetworkInterfaceDescription) validateFirewallLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.FirewallLinks) { // not required
		return nil
	}

	return nil
}

func (m *ComVmwarePhotonControllerModelResourcesNetworkInterfaceDescriptionServiceNetworkInterfaceDescription) validateGroupLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.GroupLinks) { // not required
		return nil
	}

	return nil
}

func (m *ComVmwarePhotonControllerModelResourcesNetworkInterfaceDescriptionServiceNetworkInterfaceDescription) validateSecurityGroupLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.SecurityGroupLinks) { // not required
		return nil
	}

	return nil
}

func (m *ComVmwarePhotonControllerModelResourcesNetworkInterfaceDescriptionServiceNetworkInterfaceDescription) validateTagLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.TagLinks) { // not required
		return nil
	}

	return nil
}

func (m *ComVmwarePhotonControllerModelResourcesNetworkInterfaceDescriptionServiceNetworkInterfaceDescription) validateTenantLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.TenantLinks) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwarePhotonControllerModelResourcesNetworkInterfaceDescriptionServiceNetworkInterfaceDescription) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwarePhotonControllerModelResourcesNetworkInterfaceDescriptionServiceNetworkInterfaceDescription) UnmarshalBinary(b []byte) error {
	var res ComVmwarePhotonControllerModelResourcesNetworkInterfaceDescriptionServiceNetworkInterfaceDescription
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
