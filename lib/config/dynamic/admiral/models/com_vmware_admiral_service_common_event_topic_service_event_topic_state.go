package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ComVmwareAdmiralServiceCommonEventTopicServiceEventTopicState com vmware admiral service common event topic service event topic state
// swagger:model com:vmware:admiral:service:common:EventTopicService:EventTopicState
type ComVmwareAdmiralServiceCommonEventTopicServiceEventTopicState struct {

	// Blocking or asynchronous flag
	Blockable bool `json:"blockable,omitempty"`

	// Reply payload.
	Description string `json:"description,omitempty"`

	// Event Topic id
	ID string `json:"id,omitempty"`

	// Event Topic name
	Name string `json:"name,omitempty"`

	// Schema of the topic.
	Schema string `json:"schema,omitempty"`

	// tenant links
	TenantLinks []string `json:"tenantLinks"`

	// Topic task info.
	TopicTaskInfo *ComVmwareAdmiralServiceCommonEventTopicServiceTopicTaskInfo `json:"topicTaskInfo,omitempty"`
}

// Validate validates this com vmware admiral service common event topic service event topic state
func (m *ComVmwareAdmiralServiceCommonEventTopicServiceEventTopicState) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTenantLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTopicTaskInfo(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ComVmwareAdmiralServiceCommonEventTopicServiceEventTopicState) validateTenantLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.TenantLinks) { // not required
		return nil
	}

	return nil
}

func (m *ComVmwareAdmiralServiceCommonEventTopicServiceEventTopicState) validateTopicTaskInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.TopicTaskInfo) { // not required
		return nil
	}

	if m.TopicTaskInfo != nil {

		if err := m.TopicTaskInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("topicTaskInfo")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwareAdmiralServiceCommonEventTopicServiceEventTopicState) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwareAdmiralServiceCommonEventTopicServiceEventTopicState) UnmarshalBinary(b []byte) error {
	var res ComVmwareAdmiralServiceCommonEventTopicServiceEventTopicState
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
