package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ComVmwareXenonServicesCommonAuthCredentialsServiceAuthCredentialsServiceState com vmware xenon services common auth credentials service auth credentials service state
// swagger:model com:vmware:xenon:services:common:AuthCredentialsService:AuthCredentialsServiceState
type ComVmwareXenonServicesCommonAuthCredentialsServiceAuthCredentialsServiceState struct {

	// custom properties
	CustomProperties map[string]string `json:"customProperties,omitempty"`

	// private key
	PrivateKey string `json:"privateKey,omitempty"`

	// private key Id
	PrivateKeyID string `json:"privateKeyId,omitempty"`

	// public key
	PublicKey string `json:"publicKey,omitempty"`

	// tenant links
	TenantLinks []string `json:"tenantLinks"`

	// token reference
	TokenReference strfmt.URI `json:"tokenReference,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// user email
	UserEmail string `json:"userEmail,omitempty"`

	// user link
	UserLink string `json:"userLink,omitempty"`
}

// Validate validates this com vmware xenon services common auth credentials service auth credentials service state
func (m *ComVmwareXenonServicesCommonAuthCredentialsServiceAuthCredentialsServiceState) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTenantLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ComVmwareXenonServicesCommonAuthCredentialsServiceAuthCredentialsServiceState) validateTenantLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.TenantLinks) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwareXenonServicesCommonAuthCredentialsServiceAuthCredentialsServiceState) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwareXenonServicesCommonAuthCredentialsServiceAuthCredentialsServiceState) UnmarshalBinary(b []byte) error {
	var res ComVmwareXenonServicesCommonAuthCredentialsServiceAuthCredentialsServiceState
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
