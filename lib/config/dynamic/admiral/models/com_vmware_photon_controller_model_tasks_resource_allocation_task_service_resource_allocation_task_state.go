package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskState com vmware photon controller model tasks resource allocation task service resource allocation task state
// swagger:model com:vmware:photon:controller:model:tasks:ResourceAllocationTaskService:ResourceAllocationTaskState
type ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskState struct {

	// compute description link
	ComputeDescriptionLink string `json:"computeDescriptionLink,omitempty"`

	// compute type
	ComputeType string `json:"computeType,omitempty"`

	// custom properties
	CustomProperties map[string]string `json:"customProperties,omitempty"`

	// error threshold
	ErrorThreshold float64 `json:"errorThreshold,omitempty"`

	// failure message
	FailureMessage string `json:"failureMessage,omitempty"`

	// is mock request
	IsMockRequest bool `json:"isMockRequest,omitempty"`

	// parent links
	ParentLinks []string `json:"parentLinks"`

	// resource count
	ResourceCount int64 `json:"resourceCount,omitempty"`

	// resource description link
	ResourceDescriptionLink string `json:"resourceDescriptionLink,omitempty"`

	// resource pool link
	ResourcePoolLink string `json:"resourcePoolLink,omitempty"`

	// task info
	TaskInfo *ComVmwareXenonCommonTaskState `json:"taskInfo,omitempty"`

	// task sub stage
	TaskSubStage string `json:"taskSubStage,omitempty"`

	// tenant links
	TenantLinks []string `json:"tenantLinks"`
}

// Validate validates this com vmware photon controller model tasks resource allocation task service resource allocation task state
func (m *ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskState) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateParentLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTaskInfo(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTaskSubStage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTenantLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskState) validateParentLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.ParentLinks) { // not required
		return nil
	}

	return nil
}

func (m *ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskState) validateTaskInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.TaskInfo) { // not required
		return nil
	}

	if m.TaskInfo != nil {

		if err := m.TaskInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("taskInfo")
			}
			return err
		}
	}

	return nil
}

var comVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskStateTypeTaskSubStagePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["QUERYING_AVAILABLE_COMPUTE_RESOURCES","PROVISIONING_PHYSICAL","PROVISIONING_VM_GUESTS","PROVISIONING_CONTAINERS","FINISHED","FAILED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		comVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskStateTypeTaskSubStagePropEnum = append(comVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskStateTypeTaskSubStagePropEnum, v)
	}
}

const (
	// ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskStateTaskSubStageQUERYINGAVAILABLECOMPUTERESOURCES captures enum value "QUERYING_AVAILABLE_COMPUTE_RESOURCES"
	ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskStateTaskSubStageQUERYINGAVAILABLECOMPUTERESOURCES string = "QUERYING_AVAILABLE_COMPUTE_RESOURCES"
	// ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskStateTaskSubStagePROVISIONINGPHYSICAL captures enum value "PROVISIONING_PHYSICAL"
	ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskStateTaskSubStagePROVISIONINGPHYSICAL string = "PROVISIONING_PHYSICAL"
	// ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskStateTaskSubStagePROVISIONINGVMGUESTS captures enum value "PROVISIONING_VM_GUESTS"
	ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskStateTaskSubStagePROVISIONINGVMGUESTS string = "PROVISIONING_VM_GUESTS"
	// ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskStateTaskSubStagePROVISIONINGCONTAINERS captures enum value "PROVISIONING_CONTAINERS"
	ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskStateTaskSubStagePROVISIONINGCONTAINERS string = "PROVISIONING_CONTAINERS"
	// ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskStateTaskSubStageFINISHED captures enum value "FINISHED"
	ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskStateTaskSubStageFINISHED string = "FINISHED"
	// ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskStateTaskSubStageFAILED captures enum value "FAILED"
	ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskStateTaskSubStageFAILED string = "FAILED"
)

// prop value enum
func (m *ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskState) validateTaskSubStageEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, comVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskStateTypeTaskSubStagePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskState) validateTaskSubStage(formats strfmt.Registry) error {

	if swag.IsZero(m.TaskSubStage) { // not required
		return nil
	}

	// value enum
	if err := m.validateTaskSubStageEnum("taskSubStage", "body", m.TaskSubStage); err != nil {
		return err
	}

	return nil
}

func (m *ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskState) validateTenantLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.TenantLinks) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskState) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskState) UnmarshalBinary(b []byte) error {
	var res ComVmwarePhotonControllerModelTasksResourceAllocationTaskServiceResourceAllocationTaskState
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
