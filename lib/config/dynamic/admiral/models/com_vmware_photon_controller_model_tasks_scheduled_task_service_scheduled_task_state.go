package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ComVmwarePhotonControllerModelTasksScheduledTaskServiceScheduledTaskState com vmware photon controller model tasks scheduled task service scheduled task state
// swagger:model com:vmware:photon:controller:model:tasks:ScheduledTaskService:ScheduledTaskState
type ComVmwarePhotonControllerModelTasksScheduledTaskServiceScheduledTaskState struct {

	// custom properties
	CustomProperties map[string]string `json:"customProperties,omitempty"`

	// delay micros
	DelayMicros int64 `json:"delayMicros,omitempty"`

	// enabled
	Enabled bool `json:"enabled,omitempty"`

	// factory link
	FactoryLink string `json:"factoryLink,omitempty"`

	// failure message
	FailureMessage string `json:"failureMessage,omitempty"`

	// initial state Json
	InitialStateJSON string `json:"initialStateJson,omitempty"`

	// interval micros
	IntervalMicros int64 `json:"intervalMicros,omitempty"`

	// task info
	TaskInfo *ComVmwareXenonCommonTaskState `json:"taskInfo,omitempty"`

	// tenant links
	TenantLinks []string `json:"tenantLinks"`

	// The user in whose context the task will be executed
	UserLink string `json:"userLink,omitempty"`
}

// Validate validates this com vmware photon controller model tasks scheduled task service scheduled task state
func (m *ComVmwarePhotonControllerModelTasksScheduledTaskServiceScheduledTaskState) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTaskInfo(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTenantLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ComVmwarePhotonControllerModelTasksScheduledTaskServiceScheduledTaskState) validateTaskInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.TaskInfo) { // not required
		return nil
	}

	if m.TaskInfo != nil {

		if err := m.TaskInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("taskInfo")
			}
			return err
		}
	}

	return nil
}

func (m *ComVmwarePhotonControllerModelTasksScheduledTaskServiceScheduledTaskState) validateTenantLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.TenantLinks) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwarePhotonControllerModelTasksScheduledTaskServiceScheduledTaskState) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwarePhotonControllerModelTasksScheduledTaskServiceScheduledTaskState) UnmarshalBinary(b []byte) error {
	var res ComVmwarePhotonControllerModelTasksScheduledTaskServiceScheduledTaskState
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
