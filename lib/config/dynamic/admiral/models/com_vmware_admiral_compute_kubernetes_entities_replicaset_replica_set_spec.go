package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ComVmwareAdmiralComputeKubernetesEntitiesReplicasetReplicaSetSpec com vmware admiral compute kubernetes entities replicaset replica set spec
// swagger:model com:vmware:admiral:compute:kubernetes:entities:replicaset:ReplicaSetSpec
type ComVmwareAdmiralComputeKubernetesEntitiesReplicasetReplicaSetSpec struct {

	// min ready seconds
	MinReadySeconds int64 `json:"minReadySeconds,omitempty"`

	// replicas
	Replicas int64 `json:"replicas,omitempty"`

	// selector
	Selector *ComVmwareAdmiralComputeKubernetesEntitiesCommonLabelSelector `json:"selector,omitempty"`

	// template
	Template *ComVmwareAdmiralComputeKubernetesEntitiesPodsPodTemplateSpec `json:"template,omitempty"`
}

// Validate validates this com vmware admiral compute kubernetes entities replicaset replica set spec
func (m *ComVmwareAdmiralComputeKubernetesEntitiesReplicasetReplicaSetSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSelector(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTemplate(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ComVmwareAdmiralComputeKubernetesEntitiesReplicasetReplicaSetSpec) validateSelector(formats strfmt.Registry) error {

	if swag.IsZero(m.Selector) { // not required
		return nil
	}

	if m.Selector != nil {

		if err := m.Selector.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("selector")
			}
			return err
		}
	}

	return nil
}

func (m *ComVmwareAdmiralComputeKubernetesEntitiesReplicasetReplicaSetSpec) validateTemplate(formats strfmt.Registry) error {

	if swag.IsZero(m.Template) { // not required
		return nil
	}

	if m.Template != nil {

		if err := m.Template.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("template")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwareAdmiralComputeKubernetesEntitiesReplicasetReplicaSetSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwareAdmiralComputeKubernetesEntitiesReplicasetReplicaSetSpec) UnmarshalBinary(b []byte) error {
	var res ComVmwareAdmiralComputeKubernetesEntitiesReplicasetReplicaSetSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
