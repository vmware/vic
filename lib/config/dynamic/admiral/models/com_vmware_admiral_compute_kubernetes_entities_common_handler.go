package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ComVmwareAdmiralComputeKubernetesEntitiesCommonHandler com vmware admiral compute kubernetes entities common handler
// swagger:model com:vmware:admiral:compute:kubernetes:entities:common:Handler
type ComVmwareAdmiralComputeKubernetesEntitiesCommonHandler struct {

	// exec
	Exec *ComVmwareAdmiralComputeKubernetesEntitiesPodsExecAction `json:"exec,omitempty"`

	// http get
	HTTPGet *ComVmwareAdmiralComputeKubernetesEntitiesPodsHTTPGetAction `json:"httpGet,omitempty"`

	// tcp socket
	TCPSocket *ComVmwareAdmiralComputeKubernetesEntitiesPodsTCPSocketAction `json:"tcpSocket,omitempty"`
}

// Validate validates this com vmware admiral compute kubernetes entities common handler
func (m *ComVmwareAdmiralComputeKubernetesEntitiesCommonHandler) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExec(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateHTTPGet(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTCPSocket(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ComVmwareAdmiralComputeKubernetesEntitiesCommonHandler) validateExec(formats strfmt.Registry) error {

	if swag.IsZero(m.Exec) { // not required
		return nil
	}

	if m.Exec != nil {

		if err := m.Exec.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("exec")
			}
			return err
		}
	}

	return nil
}

func (m *ComVmwareAdmiralComputeKubernetesEntitiesCommonHandler) validateHTTPGet(formats strfmt.Registry) error {

	if swag.IsZero(m.HTTPGet) { // not required
		return nil
	}

	if m.HTTPGet != nil {

		if err := m.HTTPGet.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("httpGet")
			}
			return err
		}
	}

	return nil
}

func (m *ComVmwareAdmiralComputeKubernetesEntitiesCommonHandler) validateTCPSocket(formats strfmt.Registry) error {

	if swag.IsZero(m.TCPSocket) { // not required
		return nil
	}

	if m.TCPSocket != nil {

		if err := m.TCPSocket.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tcpSocket")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwareAdmiralComputeKubernetesEntitiesCommonHandler) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwareAdmiralComputeKubernetesEntitiesCommonHandler) UnmarshalBinary(b []byte) error {
	var res ComVmwareAdmiralComputeKubernetesEntitiesCommonHandler
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
