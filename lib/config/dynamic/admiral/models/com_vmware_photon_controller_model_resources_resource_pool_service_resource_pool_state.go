package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ComVmwarePhotonControllerModelResourcesResourcePoolServiceResourcePoolState com vmware photon controller model resources resource pool service resource pool state
// swagger:model com:vmware:photon:controller:model:resources:ResourcePoolService:ResourcePoolState
type ComVmwarePhotonControllerModelResourcesResourcePoolServiceResourcePoolState struct {

	// creation time micros
	CreationTimeMicros int64 `json:"creationTimeMicros,omitempty"`

	// currency unit
	CurrencyUnit string `json:"currencyUnit,omitempty"`

	// custom properties
	CustomProperties map[string]string `json:"customProperties,omitempty"`

	// desc
	Desc string `json:"desc,omitempty"`

	// group links
	GroupLinks []string `json:"groupLinks"`

	// id
	ID string `json:"id,omitempty"`

	// max Cpu cost per minute
	MaxCPUCostPerMinute float64 `json:"maxCpuCostPerMinute,omitempty"`

	// max Cpu count
	MaxCPUCount int64 `json:"maxCpuCount,omitempty"`

	// max disk capacity bytes
	MaxDiskCapacityBytes int64 `json:"maxDiskCapacityBytes,omitempty"`

	// max disk cost per minute
	MaxDiskCostPerMinute float64 `json:"maxDiskCostPerMinute,omitempty"`

	// max gpu count
	MaxGpuCount int64 `json:"maxGpuCount,omitempty"`

	// max memory bytes
	MaxMemoryBytes int64 `json:"maxMemoryBytes,omitempty"`

	// min Cpu count
	MinCPUCount int64 `json:"minCpuCount,omitempty"`

	// min disk capacity bytes
	MinDiskCapacityBytes int64 `json:"minDiskCapacityBytes,omitempty"`

	// min gpu count
	MinGpuCount int64 `json:"minGpuCount,omitempty"`

	// min memory bytes
	MinMemoryBytes int64 `json:"minMemoryBytes,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// project name
	ProjectName string `json:"projectName,omitempty"`

	// properties
	Properties []string `json:"properties"`

	// query
	Query *ComVmwareXenonServicesCommonQueryTaskQuery `json:"query,omitempty"`

	// region Id
	RegionID string `json:"regionId,omitempty"`

	// tag links
	TagLinks []string `json:"tagLinks"`

	// tenant links
	TenantLinks []string `json:"tenantLinks"`
}

// Validate validates this com vmware photon controller model resources resource pool service resource pool state
func (m *ComVmwarePhotonControllerModelResourcesResourcePoolServiceResourcePoolState) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGroupLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateProperties(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateQuery(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTagLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTenantLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ComVmwarePhotonControllerModelResourcesResourcePoolServiceResourcePoolState) validateGroupLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.GroupLinks) { // not required
		return nil
	}

	return nil
}

var comVmwarePhotonControllerModelResourcesResourcePoolServiceResourcePoolStatePropertiesItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ELASTIC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		comVmwarePhotonControllerModelResourcesResourcePoolServiceResourcePoolStatePropertiesItemsEnum = append(comVmwarePhotonControllerModelResourcesResourcePoolServiceResourcePoolStatePropertiesItemsEnum, v)
	}
}

func (m *ComVmwarePhotonControllerModelResourcesResourcePoolServiceResourcePoolState) validatePropertiesItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, comVmwarePhotonControllerModelResourcesResourcePoolServiceResourcePoolStatePropertiesItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *ComVmwarePhotonControllerModelResourcesResourcePoolServiceResourcePoolState) validateProperties(formats strfmt.Registry) error {

	if swag.IsZero(m.Properties) { // not required
		return nil
	}

	for i := 0; i < len(m.Properties); i++ {

		// value enum
		if err := m.validatePropertiesItemsEnum("properties"+"."+strconv.Itoa(i), "body", m.Properties[i]); err != nil {
			return err
		}

	}

	return nil
}

func (m *ComVmwarePhotonControllerModelResourcesResourcePoolServiceResourcePoolState) validateQuery(formats strfmt.Registry) error {

	if swag.IsZero(m.Query) { // not required
		return nil
	}

	if m.Query != nil {

		if err := m.Query.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("query")
			}
			return err
		}
	}

	return nil
}

func (m *ComVmwarePhotonControllerModelResourcesResourcePoolServiceResourcePoolState) validateTagLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.TagLinks) { // not required
		return nil
	}

	return nil
}

func (m *ComVmwarePhotonControllerModelResourcesResourcePoolServiceResourcePoolState) validateTenantLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.TenantLinks) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwarePhotonControllerModelResourcesResourcePoolServiceResourcePoolState) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwarePhotonControllerModelResourcesResourcePoolServiceResourcePoolState) UnmarshalBinary(b []byte) error {
	var res ComVmwarePhotonControllerModelResourcesResourcePoolServiceResourcePoolState
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
