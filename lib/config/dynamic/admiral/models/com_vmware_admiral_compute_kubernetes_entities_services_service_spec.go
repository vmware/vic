package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ComVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpec com vmware admiral compute kubernetes entities services service spec
// swagger:model com:vmware:admiral:compute:kubernetes:entities:services:ServiceSpec
type ComVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpec struct {

	// cluster IP
	ClusterIP string `json:"clusterIP,omitempty"`

	// deprecated public ips
	DeprecatedPublicIps []string `json:"deprecatedPublicIPs"`

	// external ips
	ExternalIps []string `json:"externalIPs"`

	// external name
	ExternalName string `json:"externalName,omitempty"`

	// load balancer IP
	LoadBalancerIP string `json:"loadBalancerIP,omitempty"`

	// load balancer source ranges
	LoadBalancerSourceRanges string `json:"loadBalancerSourceRanges,omitempty"`

	// ports
	Ports []*ComVmwareAdmiralComputeKubernetesEntitiesServicesServicePort `json:"ports"`

	// selector
	Selector map[string]string `json:"selector,omitempty"`

	// session affinity
	SessionAffinity string `json:"sessionAffinity,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this com vmware admiral compute kubernetes entities services service spec
func (m *ComVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeprecatedPublicIps(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateExternalIps(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePorts(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ComVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpec) validateDeprecatedPublicIps(formats strfmt.Registry) error {

	if swag.IsZero(m.DeprecatedPublicIps) { // not required
		return nil
	}

	return nil
}

func (m *ComVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpec) validateExternalIps(formats strfmt.Registry) error {

	if swag.IsZero(m.ExternalIps) { // not required
		return nil
	}

	return nil
}

func (m *ComVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpec) validatePorts(formats strfmt.Registry) error {

	if swag.IsZero(m.Ports) { // not required
		return nil
	}

	for i := 0; i < len(m.Ports); i++ {

		if swag.IsZero(m.Ports[i]) { // not required
			continue
		}

		if m.Ports[i] != nil {

			if err := m.Ports[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("ports" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var comVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpecTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ClusterIP","NodePort","LoadBalancer","ExternalName"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		comVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpecTypeTypePropEnum = append(comVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpecTypeTypePropEnum, v)
	}
}

const (
	// ComVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpecTypeClusterIP captures enum value "ClusterIP"
	ComVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpecTypeClusterIP string = "ClusterIP"
	// ComVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpecTypeNodePort captures enum value "NodePort"
	ComVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpecTypeNodePort string = "NodePort"
	// ComVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpecTypeLoadBalancer captures enum value "LoadBalancer"
	ComVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpecTypeLoadBalancer string = "LoadBalancer"
	// ComVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpecTypeExternalName captures enum value "ExternalName"
	ComVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpecTypeExternalName string = "ExternalName"
)

// prop value enum
func (m *ComVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpec) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, comVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpecTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ComVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpec) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpec) UnmarshalBinary(b []byte) error {
	var res ComVmwareAdmiralComputeKubernetesEntitiesServicesServiceSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
