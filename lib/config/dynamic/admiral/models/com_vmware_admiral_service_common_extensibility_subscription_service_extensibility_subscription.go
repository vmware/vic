package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ComVmwareAdmiralServiceCommonExtensibilitySubscriptionServiceExtensibilitySubscription com vmware admiral service common extensibility subscription service extensibility subscription
// swagger:model com:vmware:admiral:service:common:ExtensibilitySubscriptionService:ExtensibilitySubscription
type ComVmwareAdmiralServiceCommonExtensibilitySubscriptionServiceExtensibilitySubscription struct {

	// Blocking or asynchronous flag
	Blocking bool `json:"blocking,omitempty"`

	// Callback address, when the specified task reaches the stage and substage, a POST request with the task state will be sent to the subscriber
	CallbackReference strfmt.URI `json:"callbackReference,omitempty"`

	// Task stage
	Stage string `json:"stage,omitempty"`

	// Task substage
	Substage string `json:"substage,omitempty"`

	// Task name
	Task string `json:"task,omitempty"`

	// tenant links
	TenantLinks []string `json:"tenantLinks"`
}

// Validate validates this com vmware admiral service common extensibility subscription service extensibility subscription
func (m *ComVmwareAdmiralServiceCommonExtensibilitySubscriptionServiceExtensibilitySubscription) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTenantLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ComVmwareAdmiralServiceCommonExtensibilitySubscriptionServiceExtensibilitySubscription) validateTenantLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.TenantLinks) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwareAdmiralServiceCommonExtensibilitySubscriptionServiceExtensibilitySubscription) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwareAdmiralServiceCommonExtensibilitySubscriptionServiceExtensibilitySubscription) UnmarshalBinary(b []byte) error {
	var res ComVmwareAdmiralServiceCommonExtensibilitySubscriptionServiceExtensibilitySubscription
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
