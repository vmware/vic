package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ComVmwareAdmiralComputeKubernetesEntitiesPodsEnvVarSource com vmware admiral compute kubernetes entities pods env var source
// swagger:model com:vmware:admiral:compute:kubernetes:entities:pods:EnvVarSource
type ComVmwareAdmiralComputeKubernetesEntitiesPodsEnvVarSource struct {

	// config map key ref
	ConfigMapKeyRef *ComVmwareAdmiralComputeKubernetesEntitiesCommonConfigMapKeySelector `json:"configMapKeyRef,omitempty"`

	// field ref
	FieldRef *ComVmwareAdmiralComputeKubernetesEntitiesCommonObjectFieldSelector `json:"fieldRef,omitempty"`

	// resource field ref
	ResourceFieldRef *ComVmwareAdmiralComputeKubernetesEntitiesCommonResourceFieldSelector `json:"resourceFieldRef,omitempty"`

	// secret key ref
	SecretKeyRef *ComVmwareAdmiralComputeKubernetesEntitiesCommonSecretKeySelector `json:"secretKeyRef,omitempty"`
}

// Validate validates this com vmware admiral compute kubernetes entities pods env var source
func (m *ComVmwareAdmiralComputeKubernetesEntitiesPodsEnvVarSource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConfigMapKeyRef(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateFieldRef(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateResourceFieldRef(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSecretKeyRef(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ComVmwareAdmiralComputeKubernetesEntitiesPodsEnvVarSource) validateConfigMapKeyRef(formats strfmt.Registry) error {

	if swag.IsZero(m.ConfigMapKeyRef) { // not required
		return nil
	}

	if m.ConfigMapKeyRef != nil {

		if err := m.ConfigMapKeyRef.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("configMapKeyRef")
			}
			return err
		}
	}

	return nil
}

func (m *ComVmwareAdmiralComputeKubernetesEntitiesPodsEnvVarSource) validateFieldRef(formats strfmt.Registry) error {

	if swag.IsZero(m.FieldRef) { // not required
		return nil
	}

	if m.FieldRef != nil {

		if err := m.FieldRef.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("fieldRef")
			}
			return err
		}
	}

	return nil
}

func (m *ComVmwareAdmiralComputeKubernetesEntitiesPodsEnvVarSource) validateResourceFieldRef(formats strfmt.Registry) error {

	if swag.IsZero(m.ResourceFieldRef) { // not required
		return nil
	}

	if m.ResourceFieldRef != nil {

		if err := m.ResourceFieldRef.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("resourceFieldRef")
			}
			return err
		}
	}

	return nil
}

func (m *ComVmwareAdmiralComputeKubernetesEntitiesPodsEnvVarSource) validateSecretKeyRef(formats strfmt.Registry) error {

	if swag.IsZero(m.SecretKeyRef) { // not required
		return nil
	}

	if m.SecretKeyRef != nil {

		if err := m.SecretKeyRef.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("secretKeyRef")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwareAdmiralComputeKubernetesEntitiesPodsEnvVarSource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwareAdmiralComputeKubernetesEntitiesPodsEnvVarSource) UnmarshalBinary(b []byte) error {
	var res ComVmwareAdmiralComputeKubernetesEntitiesPodsEnvVarSource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
