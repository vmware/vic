package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ComVmwareXenonCommonServiceErrorResponse com vmware xenon common service error response
// swagger:model com:vmware:xenon:common:ServiceErrorResponse
type ComVmwareXenonCommonServiceErrorResponse struct {

	// details
	Details []string `json:"details"`

	// message
	Message string `json:"message,omitempty"`

	// message Id
	MessageID string `json:"messageId,omitempty"`

	// stack trace
	StackTrace []string `json:"stackTrace"`

	// status code
	StatusCode int64 `json:"statusCode,omitempty"`
}

// Validate validates this com vmware xenon common service error response
func (m *ComVmwareXenonCommonServiceErrorResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDetails(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStackTrace(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var comVmwareXenonCommonServiceErrorResponseDetailsItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SHOULD_RETRY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		comVmwareXenonCommonServiceErrorResponseDetailsItemsEnum = append(comVmwareXenonCommonServiceErrorResponseDetailsItemsEnum, v)
	}
}

func (m *ComVmwareXenonCommonServiceErrorResponse) validateDetailsItemsEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, comVmwareXenonCommonServiceErrorResponseDetailsItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *ComVmwareXenonCommonServiceErrorResponse) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(m.Details) { // not required
		return nil
	}

	for i := 0; i < len(m.Details); i++ {

		// value enum
		if err := m.validateDetailsItemsEnum("details"+"."+strconv.Itoa(i), "body", m.Details[i]); err != nil {
			return err
		}

	}

	return nil
}

func (m *ComVmwareXenonCommonServiceErrorResponse) validateStackTrace(formats strfmt.Registry) error {

	if swag.IsZero(m.StackTrace) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwareXenonCommonServiceErrorResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwareXenonCommonServiceErrorResponse) UnmarshalBinary(b []byte) error {
	var res ComVmwareXenonCommonServiceErrorResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
