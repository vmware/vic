package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ComVmwareAdmiralServiceCommonCounterSubTaskServiceCounterSubTaskState com vmware admiral service common counter sub task service counter sub task state
// swagger:model com:vmware:admiral:service:common:CounterSubTaskService:CounterSubTaskState
type ComVmwareAdmiralServiceCommonCounterSubTaskServiceCounterSubTaskState struct {

	// completions remaining
	CompletionsRemaining int64 `json:"completionsRemaining,omitempty"`

	// custom properties
	CustomProperties map[string]string `json:"customProperties,omitempty"`

	// error threshold
	ErrorThreshold float64 `json:"errorThreshold,omitempty"`

	// fail count
	FailCount int64 `json:"failCount,omitempty"`

	// finished count
	FinishedCount int64 `json:"finishedCount,omitempty"`

	// service task callback
	ServiceTaskCallback *ComVmwareAdmiralServiceCommonServiceTaskCallback `json:"serviceTaskCallback,omitempty"`

	// task info
	TaskInfo *ComVmwareXenonCommonTaskState `json:"taskInfo,omitempty"`
}

// Validate validates this com vmware admiral service common counter sub task service counter sub task state
func (m *ComVmwareAdmiralServiceCommonCounterSubTaskServiceCounterSubTaskState) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateServiceTaskCallback(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTaskInfo(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ComVmwareAdmiralServiceCommonCounterSubTaskServiceCounterSubTaskState) validateServiceTaskCallback(formats strfmt.Registry) error {

	if swag.IsZero(m.ServiceTaskCallback) { // not required
		return nil
	}

	if m.ServiceTaskCallback != nil {

		if err := m.ServiceTaskCallback.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("serviceTaskCallback")
			}
			return err
		}
	}

	return nil
}

func (m *ComVmwareAdmiralServiceCommonCounterSubTaskServiceCounterSubTaskState) validateTaskInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.TaskInfo) { // not required
		return nil
	}

	if m.TaskInfo != nil {

		if err := m.TaskInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("taskInfo")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwareAdmiralServiceCommonCounterSubTaskServiceCounterSubTaskState) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwareAdmiralServiceCommonCounterSubTaskServiceCounterSubTaskState) UnmarshalBinary(b []byte) error {
	var res ComVmwareAdmiralServiceCommonCounterSubTaskServiceCounterSubTaskState
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
