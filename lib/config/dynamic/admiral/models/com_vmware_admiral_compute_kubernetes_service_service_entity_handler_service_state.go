package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ComVmwareAdmiralComputeKubernetesServiceServiceEntityHandlerServiceState com vmware admiral compute kubernetes service service entity handler service state
// swagger:model com:vmware:admiral:compute:kubernetes:service:ServiceEntityHandler:ServiceState
type ComVmwareAdmiralComputeKubernetesServiceServiceEntityHandlerServiceState struct {

	// Link to CompositeComponent when a entity is part of App/Composition request.
	CompositeComponentLink string `json:"compositeComponentLink,omitempty"`

	// creation time micros
	CreationTimeMicros int64 `json:"creationTimeMicros,omitempty"`

	// custom properties
	CustomProperties map[string]string `json:"customProperties,omitempty"`

	// desc
	Desc string `json:"desc,omitempty"`

	// Defines the description of the container.
	DescriptionLink string `json:"descriptionLink,omitempty"`

	// group links
	GroupLinks []string `json:"groupLinks"`

	// id
	ID string `json:"id,omitempty"`

	// The kubernetes self link of the entity created by the Kubernetes itself.
	KubernetesSelfLink string `json:"kubernetesSelfLink,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// Entity host link
	ParentLink string `json:"parentLink,omitempty"`

	// region Id
	RegionID string `json:"regionId,omitempty"`

	// Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.
	Service *ComVmwareAdmiralComputeKubernetesEntitiesServicesService `json:"service,omitempty"`

	// tag links
	TagLinks []string `json:"tagLinks"`

	// tenant links
	TenantLinks []string `json:"tenantLinks"`
}

// Validate validates this com vmware admiral compute kubernetes service service entity handler service state
func (m *ComVmwareAdmiralComputeKubernetesServiceServiceEntityHandlerServiceState) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGroupLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateService(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTagLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTenantLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ComVmwareAdmiralComputeKubernetesServiceServiceEntityHandlerServiceState) validateGroupLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.GroupLinks) { // not required
		return nil
	}

	return nil
}

func (m *ComVmwareAdmiralComputeKubernetesServiceServiceEntityHandlerServiceState) validateService(formats strfmt.Registry) error {

	if swag.IsZero(m.Service) { // not required
		return nil
	}

	if m.Service != nil {

		if err := m.Service.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("service")
			}
			return err
		}
	}

	return nil
}

func (m *ComVmwareAdmiralComputeKubernetesServiceServiceEntityHandlerServiceState) validateTagLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.TagLinks) { // not required
		return nil
	}

	return nil
}

func (m *ComVmwareAdmiralComputeKubernetesServiceServiceEntityHandlerServiceState) validateTenantLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.TenantLinks) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwareAdmiralComputeKubernetesServiceServiceEntityHandlerServiceState) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwareAdmiralComputeKubernetesServiceServiceEntityHandlerServiceState) UnmarshalBinary(b []byte) error {
	var res ComVmwareAdmiralComputeKubernetesServiceServiceEntityHandlerServiceState
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
