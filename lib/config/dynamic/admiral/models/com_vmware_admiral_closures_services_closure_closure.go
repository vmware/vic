package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"io"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ComVmwareAdmiralClosuresServicesClosureClosure com vmware admiral closures services closure closure
// swagger:model com:vmware:admiral:closures:services:closure:Closure
type ComVmwareAdmiralClosuresServicesClosureClosure struct {

	// creation time micros
	CreationTimeMicros int64 `json:"creationTimeMicros,omitempty"`

	// custom properties
	CustomProperties map[string]string `json:"customProperties,omitempty"`

	// desc
	Desc string `json:"desc,omitempty"`

	// Error message in case closure execution fails.
	ErrorMsg string `json:"errorMsg,omitempty"`

	// group links
	GroupLinks []string `json:"groupLinks"`

	// id
	ID string `json:"id,omitempty"`

	// inputs
	Inputs map[string]string `json:"inputs,omitempty"`

	// Closure log data.
	Logs io.ReadCloser `json:"logs,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// outputs
	Outputs map[string]string `json:"outputs,omitempty"`

	// region Id
	RegionID string `json:"regionId,omitempty"`

	// Links to used resource.
	ResourceLinks []string `json:"resourceLinks"`

	// Business state of the closure
	State string `json:"state,omitempty"`

	// tag links
	TagLinks []string `json:"tagLinks"`

	// tenant links
	TenantLinks []string `json:"tenantLinks"`
}

// Validate validates this com vmware admiral closures services closure closure
func (m *ComVmwareAdmiralClosuresServicesClosureClosure) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGroupLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateResourceLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateState(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTagLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTenantLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ComVmwareAdmiralClosuresServicesClosureClosure) validateGroupLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.GroupLinks) { // not required
		return nil
	}

	return nil
}

func (m *ComVmwareAdmiralClosuresServicesClosureClosure) validateResourceLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.ResourceLinks) { // not required
		return nil
	}

	return nil
}

var comVmwareAdmiralClosuresServicesClosureClosureTypeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CREATED","STARTED","FINISHED","FAILED","CANCELLED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		comVmwareAdmiralClosuresServicesClosureClosureTypeStatePropEnum = append(comVmwareAdmiralClosuresServicesClosureClosureTypeStatePropEnum, v)
	}
}

const (
	// ComVmwareAdmiralClosuresServicesClosureClosureStateCREATED captures enum value "CREATED"
	ComVmwareAdmiralClosuresServicesClosureClosureStateCREATED string = "CREATED"
	// ComVmwareAdmiralClosuresServicesClosureClosureStateSTARTED captures enum value "STARTED"
	ComVmwareAdmiralClosuresServicesClosureClosureStateSTARTED string = "STARTED"
	// ComVmwareAdmiralClosuresServicesClosureClosureStateFINISHED captures enum value "FINISHED"
	ComVmwareAdmiralClosuresServicesClosureClosureStateFINISHED string = "FINISHED"
	// ComVmwareAdmiralClosuresServicesClosureClosureStateFAILED captures enum value "FAILED"
	ComVmwareAdmiralClosuresServicesClosureClosureStateFAILED string = "FAILED"
	// ComVmwareAdmiralClosuresServicesClosureClosureStateCANCELLED captures enum value "CANCELLED"
	ComVmwareAdmiralClosuresServicesClosureClosureStateCANCELLED string = "CANCELLED"
)

// prop value enum
func (m *ComVmwareAdmiralClosuresServicesClosureClosure) validateStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, comVmwareAdmiralClosuresServicesClosureClosureTypeStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ComVmwareAdmiralClosuresServicesClosureClosure) validateState(formats strfmt.Registry) error {

	if swag.IsZero(m.State) { // not required
		return nil
	}

	// value enum
	if err := m.validateStateEnum("state", "body", m.State); err != nil {
		return err
	}

	return nil
}

func (m *ComVmwareAdmiralClosuresServicesClosureClosure) validateTagLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.TagLinks) { // not required
		return nil
	}

	return nil
}

func (m *ComVmwareAdmiralClosuresServicesClosureClosure) validateTenantLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.TenantLinks) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwareAdmiralClosuresServicesClosureClosure) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwareAdmiralClosuresServicesClosureClosure) UnmarshalBinary(b []byte) error {
	var res ComVmwareAdmiralClosuresServicesClosureClosure
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
