package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ComVmwarePhotonControllerModelResourcesLoadBalancerDescriptionServiceLoadBalancerDescription com vmware photon controller model resources load balancer description service load balancer description
// swagger:model com:vmware:photon:controller:model:resources:LoadBalancerDescriptionService:LoadBalancerDescription
type ComVmwarePhotonControllerModelResourcesLoadBalancerDescriptionServiceLoadBalancerDescription struct {

	// compute description link
	ComputeDescriptionLink string `json:"computeDescriptionLink,omitempty"`

	// creation time micros
	CreationTimeMicros int64 `json:"creationTimeMicros,omitempty"`

	// custom properties
	CustomProperties map[string]string `json:"customProperties,omitempty"`

	// desc
	Desc string `json:"desc,omitempty"`

	// endpoint link
	EndpointLink string `json:"endpointLink,omitempty"`

	// group links
	GroupLinks []string `json:"groupLinks"`

	// id
	ID string `json:"id,omitempty"`

	// instance adapter reference
	InstanceAdapterReference strfmt.URI `json:"instanceAdapterReference,omitempty"`

	// instance port
	InstancePort int64 `json:"instancePort,omitempty"`

	// instance protocol
	InstanceProtocol string `json:"instanceProtocol,omitempty"`

	// internet facing
	InternetFacing bool `json:"internetFacing,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// network name
	NetworkName string `json:"networkName,omitempty"`

	// port
	Port int64 `json:"port,omitempty"`

	// protocol
	Protocol string `json:"protocol,omitempty"`

	// region Id
	RegionID string `json:"regionId,omitempty"`

	// routes
	Routes []*ComVmwarePhotonControllerModelResourcesLoadBalancerDescriptionServiceLoadBalancerDescriptionRouteConfiguration `json:"routes"`

	// subnet links
	SubnetLinks []string `json:"subnetLinks"`

	// tag links
	TagLinks []string `json:"tagLinks"`

	// tenant links
	TenantLinks []string `json:"tenantLinks"`
}

// Validate validates this com vmware photon controller model resources load balancer description service load balancer description
func (m *ComVmwarePhotonControllerModelResourcesLoadBalancerDescriptionServiceLoadBalancerDescription) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGroupLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRoutes(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSubnetLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTagLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTenantLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ComVmwarePhotonControllerModelResourcesLoadBalancerDescriptionServiceLoadBalancerDescription) validateGroupLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.GroupLinks) { // not required
		return nil
	}

	return nil
}

func (m *ComVmwarePhotonControllerModelResourcesLoadBalancerDescriptionServiceLoadBalancerDescription) validateRoutes(formats strfmt.Registry) error {

	if swag.IsZero(m.Routes) { // not required
		return nil
	}

	for i := 0; i < len(m.Routes); i++ {

		if swag.IsZero(m.Routes[i]) { // not required
			continue
		}

		if m.Routes[i] != nil {

			if err := m.Routes[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("routes" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ComVmwarePhotonControllerModelResourcesLoadBalancerDescriptionServiceLoadBalancerDescription) validateSubnetLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.SubnetLinks) { // not required
		return nil
	}

	return nil
}

func (m *ComVmwarePhotonControllerModelResourcesLoadBalancerDescriptionServiceLoadBalancerDescription) validateTagLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.TagLinks) { // not required
		return nil
	}

	return nil
}

func (m *ComVmwarePhotonControllerModelResourcesLoadBalancerDescriptionServiceLoadBalancerDescription) validateTenantLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.TenantLinks) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwarePhotonControllerModelResourcesLoadBalancerDescriptionServiceLoadBalancerDescription) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwarePhotonControllerModelResourcesLoadBalancerDescriptionServiceLoadBalancerDescription) UnmarshalBinary(b []byte) error {
	var res ComVmwarePhotonControllerModelResourcesLoadBalancerDescriptionServiceLoadBalancerDescription
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
