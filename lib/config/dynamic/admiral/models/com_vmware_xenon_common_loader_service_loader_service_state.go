package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ComVmwareXenonCommonLoaderServiceLoaderServiceState com vmware xenon common loader service loader service state
// swagger:model com:vmware:xenon:common:LoaderService:LoaderServiceState
type ComVmwareXenonCommonLoaderServiceLoaderServiceState struct {

	// loader type
	LoaderType string `json:"loaderType,omitempty"`

	// path
	Path string `json:"path,omitempty"`

	// service packages
	ServicePackages map[string]string `json:"servicePackages,omitempty"`
}

// Validate validates this com vmware xenon common loader service loader service state
func (m *ComVmwareXenonCommonLoaderServiceLoaderServiceState) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLoaderType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var comVmwareXenonCommonLoaderServiceLoaderServiceStateTypeLoaderTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["FILESYSTEM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		comVmwareXenonCommonLoaderServiceLoaderServiceStateTypeLoaderTypePropEnum = append(comVmwareXenonCommonLoaderServiceLoaderServiceStateTypeLoaderTypePropEnum, v)
	}
}

const (
	// ComVmwareXenonCommonLoaderServiceLoaderServiceStateLoaderTypeFILESYSTEM captures enum value "FILESYSTEM"
	ComVmwareXenonCommonLoaderServiceLoaderServiceStateLoaderTypeFILESYSTEM string = "FILESYSTEM"
)

// prop value enum
func (m *ComVmwareXenonCommonLoaderServiceLoaderServiceState) validateLoaderTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, comVmwareXenonCommonLoaderServiceLoaderServiceStateTypeLoaderTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ComVmwareXenonCommonLoaderServiceLoaderServiceState) validateLoaderType(formats strfmt.Registry) error {

	if swag.IsZero(m.LoaderType) { // not required
		return nil
	}

	// value enum
	if err := m.validateLoaderTypeEnum("loaderType", "body", m.LoaderType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwareXenonCommonLoaderServiceLoaderServiceState) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwareXenonCommonLoaderServiceLoaderServiceState) UnmarshalBinary(b []byte) error {
	var res ComVmwareXenonCommonLoaderServiceLoaderServiceState
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
