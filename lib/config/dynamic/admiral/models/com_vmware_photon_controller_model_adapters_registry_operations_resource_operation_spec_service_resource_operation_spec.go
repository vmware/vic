package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ComVmwarePhotonControllerModelAdaptersRegistryOperationsResourceOperationSpecServiceResourceOperationSpec com vmware photon controller model adapters registry operations resource operation spec service resource operation spec
// swagger:model com:vmware:photon:controller:model:adapters:registry:operations:ResourceOperationSpecService:ResourceOperationSpec
type ComVmwarePhotonControllerModelAdaptersRegistryOperationsResourceOperationSpecServiceResourceOperationSpec struct {

	// adapter reference
	AdapterReference strfmt.URI `json:"adapterReference,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// Endpoint type for which the resource operation is defined
	EndpointType string `json:"endpointType,omitempty"`

	// Optional extensions, e.g. UI specific configuration, related to the resource operation specification.The values of the map shall bespecialization of ResourceOperationSpec.Extension
	Extensions map[string]string `json:"extensions,omitempty"`

	// Name of the photon model adapter configuration.
	Name string `json:"name,omitempty"`

	// The operation technical name.
	Operation string `json:"operation,omitempty"`

	// Resource type for which the resource operation is applicable
	ResourceType string `json:"resourceType,omitempty"`

	// Optional schema describing the expected by the resource operation payload
	Schema *ComVmwarePhotonControllerModelDataSchema `json:"schema,omitempty"`

	// target criteria
	TargetCriteria string `json:"targetCriteria,omitempty"`
}

// Validate validates this com vmware photon controller model adapters registry operations resource operation spec service resource operation spec
func (m *ComVmwarePhotonControllerModelAdaptersRegistryOperationsResourceOperationSpecServiceResourceOperationSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResourceType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSchema(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var comVmwarePhotonControllerModelAdaptersRegistryOperationsResourceOperationSpecServiceResourceOperationSpecTypeResourceTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["COMPUTE","NETWORK","STORAGE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		comVmwarePhotonControllerModelAdaptersRegistryOperationsResourceOperationSpecServiceResourceOperationSpecTypeResourceTypePropEnum = append(comVmwarePhotonControllerModelAdaptersRegistryOperationsResourceOperationSpecServiceResourceOperationSpecTypeResourceTypePropEnum, v)
	}
}

const (
	// ComVmwarePhotonControllerModelAdaptersRegistryOperationsResourceOperationSpecServiceResourceOperationSpecResourceTypeCOMPUTE captures enum value "COMPUTE"
	ComVmwarePhotonControllerModelAdaptersRegistryOperationsResourceOperationSpecServiceResourceOperationSpecResourceTypeCOMPUTE string = "COMPUTE"
	// ComVmwarePhotonControllerModelAdaptersRegistryOperationsResourceOperationSpecServiceResourceOperationSpecResourceTypeNETWORK captures enum value "NETWORK"
	ComVmwarePhotonControllerModelAdaptersRegistryOperationsResourceOperationSpecServiceResourceOperationSpecResourceTypeNETWORK string = "NETWORK"
	// ComVmwarePhotonControllerModelAdaptersRegistryOperationsResourceOperationSpecServiceResourceOperationSpecResourceTypeSTORAGE captures enum value "STORAGE"
	ComVmwarePhotonControllerModelAdaptersRegistryOperationsResourceOperationSpecServiceResourceOperationSpecResourceTypeSTORAGE string = "STORAGE"
)

// prop value enum
func (m *ComVmwarePhotonControllerModelAdaptersRegistryOperationsResourceOperationSpecServiceResourceOperationSpec) validateResourceTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, comVmwarePhotonControllerModelAdaptersRegistryOperationsResourceOperationSpecServiceResourceOperationSpecTypeResourceTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ComVmwarePhotonControllerModelAdaptersRegistryOperationsResourceOperationSpecServiceResourceOperationSpec) validateResourceType(formats strfmt.Registry) error {

	if swag.IsZero(m.ResourceType) { // not required
		return nil
	}

	// value enum
	if err := m.validateResourceTypeEnum("resourceType", "body", m.ResourceType); err != nil {
		return err
	}

	return nil
}

func (m *ComVmwarePhotonControllerModelAdaptersRegistryOperationsResourceOperationSpecServiceResourceOperationSpec) validateSchema(formats strfmt.Registry) error {

	if swag.IsZero(m.Schema) { // not required
		return nil
	}

	if m.Schema != nil {

		if err := m.Schema.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("schema")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwarePhotonControllerModelAdaptersRegistryOperationsResourceOperationSpecServiceResourceOperationSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwarePhotonControllerModelAdaptersRegistryOperationsResourceOperationSpecServiceResourceOperationSpec) UnmarshalBinary(b []byte) error {
	var res ComVmwarePhotonControllerModelAdaptersRegistryOperationsResourceOperationSpecServiceResourceOperationSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
