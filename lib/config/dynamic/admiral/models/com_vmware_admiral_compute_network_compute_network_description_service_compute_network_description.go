package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ComVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescription com vmware admiral compute network compute network description service compute network description
// swagger:model com:vmware:admiral:compute:network:ComputeNetworkDescriptionService:ComputeNetworkDescription
type ComVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescription struct {

	// assignment
	Assignment string `json:"assignment,omitempty"`

	// constraints
	Constraints map[string]string `json:"constraints,omitempty"`

	// creation time micros
	CreationTimeMicros int64 `json:"creationTimeMicros,omitempty"`

	// custom properties
	CustomProperties map[string]string `json:"customProperties,omitempty"`

	// desc
	Desc string `json:"desc,omitempty"`

	// group links
	GroupLinks []string `json:"groupLinks"`

	// id
	ID string `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// Composite Template use only. Specifies the network type e.g public or isolated
	NetworkType string `json:"networkType,omitempty"`

	// region Id
	RegionID string `json:"regionId,omitempty"`

	// Security groups to apply to all instances connected to this network
	SecurityGroupLinks []string `json:"securityGroupLinks"`

	// tag links
	TagLinks []string `json:"tagLinks"`

	// tenant links
	TenantLinks []string `json:"tenantLinks"`
}

// Validate validates this com vmware admiral compute network compute network description service compute network description
func (m *ComVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescription) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGroupLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateNetworkType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSecurityGroupLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTagLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTenantLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ComVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescription) validateGroupLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.GroupLinks) { // not required
		return nil
	}

	return nil
}

var comVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescriptionTypeNetworkTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PUBLIC","ISOLATED","EXTERNAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		comVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescriptionTypeNetworkTypePropEnum = append(comVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescriptionTypeNetworkTypePropEnum, v)
	}
}

const (
	// ComVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescriptionNetworkTypePUBLIC captures enum value "PUBLIC"
	ComVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescriptionNetworkTypePUBLIC string = "PUBLIC"
	// ComVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescriptionNetworkTypeISOLATED captures enum value "ISOLATED"
	ComVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescriptionNetworkTypeISOLATED string = "ISOLATED"
	// ComVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescriptionNetworkTypeEXTERNAL captures enum value "EXTERNAL"
	ComVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescriptionNetworkTypeEXTERNAL string = "EXTERNAL"
)

// prop value enum
func (m *ComVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescription) validateNetworkTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, comVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescriptionTypeNetworkTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ComVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescription) validateNetworkType(formats strfmt.Registry) error {

	if swag.IsZero(m.NetworkType) { // not required
		return nil
	}

	// value enum
	if err := m.validateNetworkTypeEnum("networkType", "body", m.NetworkType); err != nil {
		return err
	}

	return nil
}

func (m *ComVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescription) validateSecurityGroupLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.SecurityGroupLinks) { // not required
		return nil
	}

	return nil
}

func (m *ComVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescription) validateTagLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.TagLinks) { // not required
		return nil
	}

	return nil
}

func (m *ComVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescription) validateTenantLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.TenantLinks) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescription) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescription) UnmarshalBinary(b []byte) error {
	var res ComVmwareAdmiralComputeNetworkComputeNetworkDescriptionServiceComputeNetworkDescription
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
