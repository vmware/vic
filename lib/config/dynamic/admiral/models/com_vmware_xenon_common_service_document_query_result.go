package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ComVmwareXenonCommonServiceDocumentQueryResult com vmware xenon common service document query result
// swagger:model com:vmware:xenon:common:ServiceDocumentQueryResult
type ComVmwareXenonCommonServiceDocumentQueryResult struct {

	// continuous results
	ContinuousResults *ComVmwareXenonCommonServiceDocumentQueryResultContinuousResult `json:"continuousResults,omitempty"`

	// document count
	DocumentCount int64 `json:"documentCount,omitempty"`

	// document links
	DocumentLinks []string `json:"documentLinks"`

	// documents
	Documents map[string]string `json:"documents,omitempty"`

	// next page link
	NextPageLink string `json:"nextPageLink,omitempty"`

	// next page links per group
	NextPageLinksPerGroup map[string]string `json:"nextPageLinksPerGroup,omitempty"`

	// prev page link
	PrevPageLink string `json:"prevPageLink,omitempty"`

	// query time micros
	QueryTimeMicros int64 `json:"queryTimeMicros,omitempty"`

	// selected documents
	SelectedDocuments map[string]string `json:"selectedDocuments,omitempty"`

	// selected links
	SelectedLinks []string `json:"selectedLinks"`

	// selected links per document
	SelectedLinksPerDocument map[string]string `json:"selectedLinksPerDocument,omitempty"`
}

// Validate validates this com vmware xenon common service document query result
func (m *ComVmwareXenonCommonServiceDocumentQueryResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateContinuousResults(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDocumentLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSelectedLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ComVmwareXenonCommonServiceDocumentQueryResult) validateContinuousResults(formats strfmt.Registry) error {

	if swag.IsZero(m.ContinuousResults) { // not required
		return nil
	}

	if m.ContinuousResults != nil {

		if err := m.ContinuousResults.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("continuousResults")
			}
			return err
		}
	}

	return nil
}

func (m *ComVmwareXenonCommonServiceDocumentQueryResult) validateDocumentLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.DocumentLinks) { // not required
		return nil
	}

	return nil
}

func (m *ComVmwareXenonCommonServiceDocumentQueryResult) validateSelectedLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.SelectedLinks) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwareXenonCommonServiceDocumentQueryResult) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwareXenonCommonServiceDocumentQueryResult) UnmarshalBinary(b []byte) error {
	var res ComVmwareXenonCommonServiceDocumentQueryResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
