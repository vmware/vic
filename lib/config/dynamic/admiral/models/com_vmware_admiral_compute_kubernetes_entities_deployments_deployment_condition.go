package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ComVmwareAdmiralComputeKubernetesEntitiesDeploymentsDeploymentCondition com vmware admiral compute kubernetes entities deployments deployment condition
// swagger:model com:vmware:admiral:compute:kubernetes:entities:deployments:DeploymentCondition
type ComVmwareAdmiralComputeKubernetesEntitiesDeploymentsDeploymentCondition struct {

	// last transition time
	LastTransitionTime string `json:"lastTransitionTime,omitempty"`

	// last update time
	LastUpdateTime string `json:"lastUpdateTime,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// reason
	Reason string `json:"reason,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this com vmware admiral compute kubernetes entities deployments deployment condition
func (m *ComVmwareAdmiralComputeKubernetesEntitiesDeploymentsDeploymentCondition) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var comVmwareAdmiralComputeKubernetesEntitiesDeploymentsDeploymentConditionTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Available","Progressing","ReplicaFailure"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		comVmwareAdmiralComputeKubernetesEntitiesDeploymentsDeploymentConditionTypeTypePropEnum = append(comVmwareAdmiralComputeKubernetesEntitiesDeploymentsDeploymentConditionTypeTypePropEnum, v)
	}
}

const (
	// ComVmwareAdmiralComputeKubernetesEntitiesDeploymentsDeploymentConditionTypeAvailable captures enum value "Available"
	ComVmwareAdmiralComputeKubernetesEntitiesDeploymentsDeploymentConditionTypeAvailable string = "Available"
	// ComVmwareAdmiralComputeKubernetesEntitiesDeploymentsDeploymentConditionTypeProgressing captures enum value "Progressing"
	ComVmwareAdmiralComputeKubernetesEntitiesDeploymentsDeploymentConditionTypeProgressing string = "Progressing"
	// ComVmwareAdmiralComputeKubernetesEntitiesDeploymentsDeploymentConditionTypeReplicaFailure captures enum value "ReplicaFailure"
	ComVmwareAdmiralComputeKubernetesEntitiesDeploymentsDeploymentConditionTypeReplicaFailure string = "ReplicaFailure"
)

// prop value enum
func (m *ComVmwareAdmiralComputeKubernetesEntitiesDeploymentsDeploymentCondition) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, comVmwareAdmiralComputeKubernetesEntitiesDeploymentsDeploymentConditionTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ComVmwareAdmiralComputeKubernetesEntitiesDeploymentsDeploymentCondition) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwareAdmiralComputeKubernetesEntitiesDeploymentsDeploymentCondition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwareAdmiralComputeKubernetesEntitiesDeploymentsDeploymentCondition) UnmarshalBinary(b []byte) error {
	var res ComVmwareAdmiralComputeKubernetesEntitiesDeploymentsDeploymentCondition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
