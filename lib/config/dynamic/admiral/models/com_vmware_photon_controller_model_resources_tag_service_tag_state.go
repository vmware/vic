package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ComVmwarePhotonControllerModelResourcesTagServiceTagState com vmware photon controller model resources tag service tag state
// swagger:model com:vmware:photon:controller:model:resources:TagService:TagState
type ComVmwarePhotonControllerModelResourcesTagServiceTagState struct {

	// Whether this tag is from external source
	External bool `json:"external,omitempty"`

	// Tag key
	Key string `json:"key,omitempty"`

	// A list of tenant links that can access this tag
	TenantLinks []string `json:"tenantLinks"`

	// Tag value, empty string used for none (null not accepted)
	Value string `json:"value,omitempty"`
}

// Validate validates this com vmware photon controller model resources tag service tag state
func (m *ComVmwarePhotonControllerModelResourcesTagServiceTagState) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTenantLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ComVmwarePhotonControllerModelResourcesTagServiceTagState) validateTenantLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.TenantLinks) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwarePhotonControllerModelResourcesTagServiceTagState) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwarePhotonControllerModelResourcesTagServiceTagState) UnmarshalBinary(b []byte) error {
	var res ComVmwarePhotonControllerModelResourcesTagServiceTagState
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
