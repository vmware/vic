package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ComVmwareAdmiralAuthIdmLocalLocalPrincipalServiceLocalPrincipalState com vmware admiral auth idm local local principal service local principal state
// swagger:model com:vmware:admiral:auth:idm:local:LocalPrincipalService:LocalPrincipalState
type ComVmwareAdmiralAuthIdmLocalLocalPrincipalServiceLocalPrincipalState struct {

	// email
	Email string `json:"email,omitempty"`

	// group members links
	GroupMembersLinks []string `json:"groupMembersLinks"`

	// id
	ID string `json:"id,omitempty"`

	// is admin
	IsAdmin bool `json:"isAdmin,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// password
	Password string `json:"password,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this com vmware admiral auth idm local local principal service local principal state
func (m *ComVmwareAdmiralAuthIdmLocalLocalPrincipalServiceLocalPrincipalState) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGroupMembersLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ComVmwareAdmiralAuthIdmLocalLocalPrincipalServiceLocalPrincipalState) validateGroupMembersLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.GroupMembersLinks) { // not required
		return nil
	}

	return nil
}

var comVmwareAdmiralAuthIdmLocalLocalPrincipalServiceLocalPrincipalStateTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["USER","GROUP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		comVmwareAdmiralAuthIdmLocalLocalPrincipalServiceLocalPrincipalStateTypeTypePropEnum = append(comVmwareAdmiralAuthIdmLocalLocalPrincipalServiceLocalPrincipalStateTypeTypePropEnum, v)
	}
}

const (
	// ComVmwareAdmiralAuthIdmLocalLocalPrincipalServiceLocalPrincipalStateTypeUSER captures enum value "USER"
	ComVmwareAdmiralAuthIdmLocalLocalPrincipalServiceLocalPrincipalStateTypeUSER string = "USER"
	// ComVmwareAdmiralAuthIdmLocalLocalPrincipalServiceLocalPrincipalStateTypeGROUP captures enum value "GROUP"
	ComVmwareAdmiralAuthIdmLocalLocalPrincipalServiceLocalPrincipalStateTypeGROUP string = "GROUP"
)

// prop value enum
func (m *ComVmwareAdmiralAuthIdmLocalLocalPrincipalServiceLocalPrincipalState) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, comVmwareAdmiralAuthIdmLocalLocalPrincipalServiceLocalPrincipalStateTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ComVmwareAdmiralAuthIdmLocalLocalPrincipalServiceLocalPrincipalState) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwareAdmiralAuthIdmLocalLocalPrincipalServiceLocalPrincipalState) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwareAdmiralAuthIdmLocalLocalPrincipalServiceLocalPrincipalState) UnmarshalBinary(b []byte) error {
	var res ComVmwareAdmiralAuthIdmLocalLocalPrincipalServiceLocalPrincipalState
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
