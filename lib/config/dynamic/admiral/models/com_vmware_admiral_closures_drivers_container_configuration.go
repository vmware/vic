package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ComVmwareAdmiralClosuresDriversContainerConfiguration com vmware admiral closures drivers container configuration
// swagger:model com:vmware:admiral:closures:drivers:ContainerConfiguration
type ComVmwareAdmiralClosuresDriversContainerConfiguration struct {

	// cpu shares
	CPUShares int64 `json:"cpuShares,omitempty"`

	// dependencies
	Dependencies string `json:"dependencies,omitempty"`

	// env vars
	EnvVars []string `json:"envVars"`

	// log configuration
	LogConfiguration ComGoogleGsonJSONElement `json:"logConfiguration,omitempty"`

	// memory m b
	MemoryMB int64 `json:"memoryMB,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// source URL
	SourceURL string `json:"sourceURL,omitempty"`
}

// Validate validates this com vmware admiral closures drivers container configuration
func (m *ComVmwareAdmiralClosuresDriversContainerConfiguration) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnvVars(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ComVmwareAdmiralClosuresDriversContainerConfiguration) validateEnvVars(formats strfmt.Registry) error {

	if swag.IsZero(m.EnvVars) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwareAdmiralClosuresDriversContainerConfiguration) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwareAdmiralClosuresDriversContainerConfiguration) UnmarshalBinary(b []byte) error {
	var res ComVmwareAdmiralClosuresDriversContainerConfiguration
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
