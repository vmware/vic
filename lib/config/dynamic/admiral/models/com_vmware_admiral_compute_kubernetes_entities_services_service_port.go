package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ComVmwareAdmiralComputeKubernetesEntitiesServicesServicePort com vmware admiral compute kubernetes entities services service port
// swagger:model com:vmware:admiral:compute:kubernetes:entities:services:ServicePort
type ComVmwareAdmiralComputeKubernetesEntitiesServicesServicePort struct {

	// name
	Name string `json:"name,omitempty"`

	// node port
	NodePort int64 `json:"nodePort,omitempty"`

	// port
	Port int64 `json:"port,omitempty"`

	// protocol
	Protocol string `json:"protocol,omitempty"`

	// target port
	TargetPort string `json:"targetPort,omitempty"`
}

// Validate validates this com vmware admiral compute kubernetes entities services service port
func (m *ComVmwareAdmiralComputeKubernetesEntitiesServicesServicePort) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *ComVmwareAdmiralComputeKubernetesEntitiesServicesServicePort) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComVmwareAdmiralComputeKubernetesEntitiesServicesServicePort) UnmarshalBinary(b []byte) error {
	var res ComVmwareAdmiralComputeKubernetesEntitiesServicesServicePort
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
