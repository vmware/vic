package config_registries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/vic/lib/config/dynamic/admiral/models"
)

// PutConfigRegistriesIDReader is a Reader for the PutConfigRegistriesID structure.
type PutConfigRegistriesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutConfigRegistriesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutConfigRegistriesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewPutConfigRegistriesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutConfigRegistriesIDOK creates a PutConfigRegistriesIDOK with default headers values
func NewPutConfigRegistriesIDOK() *PutConfigRegistriesIDOK {
	return &PutConfigRegistriesIDOK{}
}

/*PutConfigRegistriesIDOK handles this case with default header values.

Success
*/
type PutConfigRegistriesIDOK struct {
	Payload *models.ComVmwareAdmiralServiceCommonRegistryServiceRegistryState
}

func (o *PutConfigRegistriesIDOK) Error() string {
	return fmt.Sprintf("[PUT /config/registries/{id}][%d] putConfigRegistriesIdOK  %+v", 200, o.Payload)
}

func (o *PutConfigRegistriesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ComVmwareAdmiralServiceCommonRegistryServiceRegistryState)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutConfigRegistriesIDNotFound creates a PutConfigRegistriesIDNotFound with default headers values
func NewPutConfigRegistriesIDNotFound() *PutConfigRegistriesIDNotFound {
	return &PutConfigRegistriesIDNotFound{}
}

/*PutConfigRegistriesIDNotFound handles this case with default header values.

Error
*/
type PutConfigRegistriesIDNotFound struct {
	Payload *models.ComVmwareXenonCommonServiceErrorResponse
}

func (o *PutConfigRegistriesIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /config/registries/{id}][%d] putConfigRegistriesIdNotFound  %+v", 404, o.Payload)
}

func (o *PutConfigRegistriesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ComVmwareXenonCommonServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
