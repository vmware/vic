package config_registries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/vic/lib/config/dynamic/admiral/models"
)

// PatchConfigRegistriesIDReader is a Reader for the PatchConfigRegistriesID structure.
type PatchConfigRegistriesIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchConfigRegistriesIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchConfigRegistriesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewPatchConfigRegistriesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchConfigRegistriesIDOK creates a PatchConfigRegistriesIDOK with default headers values
func NewPatchConfigRegistriesIDOK() *PatchConfigRegistriesIDOK {
	return &PatchConfigRegistriesIDOK{}
}

/*PatchConfigRegistriesIDOK handles this case with default header values.

Success
*/
type PatchConfigRegistriesIDOK struct {
	Payload *models.ComVmwareAdmiralServiceCommonRegistryServiceRegistryState
}

func (o *PatchConfigRegistriesIDOK) Error() string {
	return fmt.Sprintf("[PATCH /config/registries/{id}][%d] patchConfigRegistriesIdOK  %+v", 200, o.Payload)
}

func (o *PatchConfigRegistriesIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ComVmwareAdmiralServiceCommonRegistryServiceRegistryState)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchConfigRegistriesIDNotFound creates a PatchConfigRegistriesIDNotFound with default headers values
func NewPatchConfigRegistriesIDNotFound() *PatchConfigRegistriesIDNotFound {
	return &PatchConfigRegistriesIDNotFound{}
}

/*PatchConfigRegistriesIDNotFound handles this case with default header values.

Error
*/
type PatchConfigRegistriesIDNotFound struct {
	Payload *models.ComVmwareXenonCommonServiceErrorResponse
}

func (o *PatchConfigRegistriesIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /config/registries/{id}][%d] patchConfigRegistriesIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchConfigRegistriesIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ComVmwareXenonCommonServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
