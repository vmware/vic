package resources_compute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/vic/lib/config/dynamic/admiral/models"
)

// GetResourcesComputeIDReader is a Reader for the GetResourcesComputeID structure.
type GetResourcesComputeIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourcesComputeIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetResourcesComputeIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetResourcesComputeIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetResourcesComputeIDOK creates a GetResourcesComputeIDOK with default headers values
func NewGetResourcesComputeIDOK() *GetResourcesComputeIDOK {
	return &GetResourcesComputeIDOK{}
}

/*GetResourcesComputeIDOK handles this case with default header values.

Success
*/
type GetResourcesComputeIDOK struct {
	Payload *models.ComVmwarePhotonControllerModelResourcesComputeServiceComputeState
}

func (o *GetResourcesComputeIDOK) Error() string {
	return fmt.Sprintf("[GET /resources/compute/{id}][%d] getResourcesComputeIdOK  %+v", 200, o.Payload)
}

func (o *GetResourcesComputeIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ComVmwarePhotonControllerModelResourcesComputeServiceComputeState)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourcesComputeIDNotFound creates a GetResourcesComputeIDNotFound with default headers values
func NewGetResourcesComputeIDNotFound() *GetResourcesComputeIDNotFound {
	return &GetResourcesComputeIDNotFound{}
}

/*GetResourcesComputeIDNotFound handles this case with default header values.

Error
*/
type GetResourcesComputeIDNotFound struct {
	Payload *models.ComVmwareXenonCommonServiceErrorResponse
}

func (o *GetResourcesComputeIDNotFound) Error() string {
	return fmt.Sprintf("[GET /resources/compute/{id}][%d] getResourcesComputeIdNotFound  %+v", 404, o.Payload)
}

func (o *GetResourcesComputeIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ComVmwareXenonCommonServiceErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
